diff a/src/java.desktop/macosx/native/libawt_lwawt/awt/shaders.metal b/src/java.desktop/macosx/native/libawt_lwawt/awt/shaders.metal
--- a/src/java.desktop/macosx/native/libawt_lwawt/awt/shaders.metal
+++ b/src/java.desktop/macosx/native/libawt_lwawt/awt/shaders.metal
@@ -52,10 +52,16 @@
     float4 position [[position]];
     float2 texCoords;
     float2 tpCoords;
 };
 
+struct LCDShaderInOut {
+    float4 position [[position]];
+    float2 orig_pos;
+    float2 texCoords;
+};
+
 struct GradShaderInOut {
     float4 position [[position]];
     float2 texCoords;
 };
 
@@ -106,10 +112,19 @@
     out.position = transform.transformMatrix*pos4;
     out.texCoords = in.texCoords;
     return out;
 }
 
+vertex LCDShaderInOut vert_txt_lcd(TxtVertexInput in [[stage_in]], constant TransformMatrix& transform [[buffer(MatrixBuffer)]]) {
+    LCDShaderInOut out;
+    float4 pos4 = float4(in.position, 0.0, 1.0);
+    out.position = transform.transformMatrix*pos4;
+    out.orig_pos = in.position;
+    out.texCoords = in.texCoords;
+    return out;
+}
+
 vertex TxtShaderInOut vert_txt_tp(TxtVertexInput in [[stage_in]], constant AnchorData& anchorData [[buffer(FrameUniformBuffer)]], constant TransformMatrix& transform [[buffer(MatrixBuffer)]])
 {
     TxtShaderInOut out;
     float4 pos4 = float4(in.position, 0.0, 1.0);
     out.position = transform.transformMatrix * pos4;
@@ -390,33 +405,34 @@
  * And here is the theoretical equation approximated by this shader:
  *
  *            Cr = (Ag*(Cs^Ga) + (1-Ag)*(Cd^Ga)) ^ (1/Ga)
  */
 fragment float4 lcd_color(
-        TxtShaderInOut vert [[stage_in]],
+        LCDShaderInOut vert [[stage_in]],
         texture2d<float, access::sample> glyphTexture [[texture(0)]],
         texture2d<float, access::sample> dstTexture [[texture(1)]],
         constant LCDFrameUniforms& uniforms [[buffer(1)]]) 
 {
     float3 src_adj = uniforms.src_adj;
     float3 gamma = uniforms.gamma;
     float3 invgamma = uniforms.invgamma;
 
-    constexpr sampler glyphTextureSampler (mag_filter::linear,
-                                      min_filter::linear);
+    constexpr sampler glyphTextureSampler (address::repeat,
+                                      mag_filter::nearest,
+                                      min_filter::nearest);
 
     // load the RGB value from the glyph image at the current texcoord
     float3 glyph_clr = float3(glyphTexture.sample(glyphTextureSampler, vert.texCoords));
 
     if (glyph_clr.r == 0.0f && glyph_clr.g == 0.0f && glyph_clr.b == 0.0f) {
         // zero coverage, so skip this fragment
         discard_fragment();
     }
-    constexpr sampler dstTextureSampler (mag_filter::linear,
-                                      min_filter::linear);
+
     // load the RGB value from the corresponding destination pixel
-    float3 dst_clr = float3(dstTexture.sample(dstTextureSampler, vert.texCoords));
+    uint2 texCoord = {(unsigned int)(vert.orig_pos.x), (unsigned int)(vert.orig_pos.y)};
+    float4 dst_clr = dstTexture.read(texCoord);
 
     // gamma adjust the dest color
     float3 dst_adj = pow(dst_clr.rgb, gamma);
 
     // linearly interpolate the three color values

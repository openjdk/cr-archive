diff a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m
--- a/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m
+++ b/src/java.desktop/macosx/native/libawt_lwawt/java2d/metal/MTLRenderQueue.m
@@ -833,10 +833,13 @@
                     CHECK_PREVIOUS_OP(MTL_OP_OTHER);
                     jlong pSrc = NEXT_LONG(b);
                     jlong pDst = NEXT_LONG(b);
 
                     dstOps = (BMTLSDOps *)jlong_to_ptr(pDst);
+                    if (mtlc != NULL) {
+                        [mtlc.encoderManager endEncoder];
+                    }
                     mtlc = [MTLContext setSurfacesEnv:env src:pSrc dst:pDst];
                     break;
                 }
                 case sun_java2d_pipe_BufferedOpCodes_SET_SCRATCH_SURFACE:
                 {
@@ -850,10 +853,13 @@
                     } else {
                         MTLContext *newMtlc = mtlInfo->context;
                         if (newMtlc == NULL) {
 
                         } else {
+                            if (mtlc != NULL) {
+                                [mtlc.encoderManager endEncoder];
+                            }
                             mtlc = newMtlc;
                             dstOps = NULL;
                         }
                     }
                     break;
@@ -891,19 +897,25 @@
                     MTLGC_DestroyMTLGraphicsConfig(pConfigInfo);
 
                     // the previous method will call glX/wglMakeCurrent(None),
                     // so we should nullify the current mtlc and dstOps to avoid
                     // calling glFlush() (or similar) while no context is current
+                    if (mtlc != NULL) {
+                        [mtlc.encoderManager endEncoder];
+                    }
                     mtlc = NULL;
                  //   dstOps = NULL;
                     break;
                 }
                 case sun_java2d_pipe_BufferedOpCodes_INVALIDATE_CONTEXT:
                 {
                     CHECK_PREVIOUS_OP(MTL_OP_OTHER);
                     // invalidate the references to the current context and
                     // destination surface that are maintained at the native level
+                    if (mtlc != NULL) {
+                        [mtlc.encoderManager endEncoder];
+                    }
                     mtlc = NULL;
                 //    dstOps = NULL;
                     break;
                 }
                 case sun_java2d_pipe_BufferedOpCodes_SYNC:

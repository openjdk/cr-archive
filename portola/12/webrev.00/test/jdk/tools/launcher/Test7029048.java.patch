diff a/test/jdk/tools/launcher/Test7029048.java b/test/jdk/tools/launcher/Test7029048.java
--- a/test/jdk/tools/launcher/Test7029048.java
+++ b/test/jdk/tools/launcher/Test7029048.java
@@ -26,23 +26,32 @@
  * @bug 7029048 8217340 8217216
  * @summary Ensure that the launcher defends against user settings of the
  *          LD_LIBRARY_PATH environment variable on Unixes
  * @library /test/lib
  * @compile -XDignore.symbol.file ExecutionEnvironment.java Test7029048.java
- * @run main Test7029048
+ * @build sun.hotspot.WhiteBox
+ * @run driver ClassFileInstaller sun.hotspot.WhiteBox
+ * @run main/othervm -Xbootclasspath/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI Test7029048
  */
 
 import java.io.File;
 import java.io.IOException;
 import java.nio.file.Files;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
+import sun.hotspot.WhiteBox;
+
 public class Test7029048 extends TestHelper {
 
+    private static final boolean isMusl =
+            WhiteBox.getWhiteBox().getLibcName().contains("musl");
+    private static final boolean isExpandedLoadLibraryPath =
+            TestHelper.isAIX || isMusl;
+
     private static final String LIBJVM = ExecutionEnvironment.LIBJVM;
     private static final String LD_LIBRARY_PATH =
             ExecutionEnvironment.LD_LIBRARY_PATH;
     private static final String LD_LIBRARY_PATH_64 =
             ExecutionEnvironment.LD_LIBRARY_PATH_64;
@@ -153,21 +162,21 @@
                     } else {
                         Files.deleteIfExists(dstServerLibjvm.toPath());
                     }
 
                     desc = "LD_LIBRARY_PATH should not be set (no libjvm.so)";
-                    if (TestHelper.isExpandedSharedLibraryPath) {
+                    if (isExpandedLoadLibraryPath) {
                         printSkipMessage(desc);
                         continue;
                     }
                     break;
                 case NO_DIR:
                     if (dstLibDir.exists()) {
                         recursiveDelete(dstLibDir);
                     }
                     desc = "LD_LIBRARY_PATH should not be set (no directory)";
-                    if (TestHelper.isExpandedSharedLibraryPath) {
+                    if (isExpandedLoadLibraryPath) {
                         printSkipMessage(desc);
                         continue;
                     }
                     break;
                 default:
@@ -191,12 +200,12 @@
         }
         return pass;
     }
 
     private static void printSkipMessage(String description) {
-        System.out.printf("Skipping test case '%s' because the Aix launcher" +
-                          " adds the paths in any case.%n", description);
+        System.out.printf("Skipping test case '%s' because the Aix and musl launchers" +
+                          " add the paths in any case.%n", description);
     }
 
     public static void main(String... args) throws Exception {
         if (TestHelper.isWindows || TestHelper.isMacOSX) {
             System.out.println("Note: applicable on neither Windows nor MacOSX");

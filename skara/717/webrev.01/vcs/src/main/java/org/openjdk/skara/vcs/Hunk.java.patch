diff a/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java b/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/Hunk.java
@@ -21,11 +21,13 @@
  * questions.
  */
 package org.openjdk.skara.vcs;
 
 import java.io.BufferedWriter;
+import java.io.StringWriter;
 import java.io.IOException;
+import java.io.UncheckedIOException;
 import java.util.List;
 
 public class Hunk {
     public static final class Info {
         private final Range range;
@@ -78,11 +80,21 @@
         var added = target.lines().size() - modified;
         var removed = source.lines().size() - modified;
         return new WebrevStats(added, removed, modified);
     }
 
+    public int changes() {
+        return source.lines().size() + target.lines().size();
+    }
+
+    public int additions() {
+        return target.lines().size();
+    }
 
+    public int deletions() {
+        return source.lines().size();
+    }
 
     public void write(BufferedWriter w) throws IOException {
         w.append("@@ -");
         w.append(source.range().toString());
         w.append(" +");
@@ -108,6 +120,38 @@
         if (!target.hasNewlineAtEndOfFile()) {
             w.append("\\ No newline at end of file");
             w.write("\n");
         }
     }
+
+    @Override
+    public String toString() {
+        var sb = new StringBuilder();
+        sb.append("@@ -");
+        sb.append(source.range().toString());
+        sb.append(" +");
+        sb.append(target.range().toString());
+        sb.append(" @@");
+        sb.append("\n");
+
+        for (var line : source.lines()) {
+            sb.append("-");
+            sb.append(line);
+            sb.append("\n");
+        }
+        if (!source.hasNewlineAtEndOfFile()) {
+            sb.append("\\ No newline at end of file");
+            sb.append("\n");
+        }
+
+        for (var line : target.lines()) {
+            sb.append("+");
+            sb.append(line);
+            sb.append("\n");
+        }
+        if (!target.hasNewlineAtEndOfFile()) {
+            sb.append("\\ No newline at end of file");
+            sb.append("\n");
+        }
+        return sb.toString();
+    }
 }

diff a/webrev/src/main/java/org/openjdk/skara/webrev/ModifiedFileView.java b/webrev/src/main/java/org/openjdk/skara/webrev/ModifiedFileView.java
--- a/webrev/src/main/java/org/openjdk/skara/webrev/ModifiedFileView.java
+++ b/webrev/src/main/java/org/openjdk/skara/webrev/ModifiedFileView.java
@@ -38,11 +38,11 @@
     private final List<CommitMetadata> commits;
     private final MetadataFormatter formatter;
     private final List<String> oldContent;
     private final List<String> newContent;
     private final byte[] binaryContent;
-    private final WebrevStats stats;
+    private final Stats stats;
 
     public ModifiedFileView(ReadOnlyRepository repo, Hash base, Hash head, List<CommitMetadata> commits, MetadataFormatter formatter, Patch patch, Path out, Navigation navigation) throws IOException {
         this.patch = patch;
         this.out = out;
         this.navigation = navigation;
@@ -90,11 +90,11 @@
                     new IllegalArgumentException("Could not get content for file " +
                                                        patch.target().path().get() +
                                                        " at revision " + head)
                 );
             }
-            stats = new WebrevStats(patch.asTextualPatch().stats(), newContent.size());
+            stats = new Stats(patch.asTextualPatch().stats(), newContent.size());
         } else {
             oldContent = null;
             newContent = null;
             if (head == null) {
                 binaryContent = Files.readAllBytes(repo.root().resolve(patch.target().path().get()));
@@ -103,16 +103,16 @@
                     new IllegalArgumentException("Could not get content for file " +
                                                        patch.target().path().get() +
                                                        " at revision " + head)
                 );
             }
-            stats = WebrevStats.empty();
+            stats = Stats.empty();
         }
     }
 
     @Override
-    public WebrevStats stats() {
+    public Stats stats() {
         return stats;
     }
 
     private void renderTextual(Writer w) throws IOException {
         var targetPath = patch.target().path().get();

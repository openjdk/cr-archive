diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBot.java
@@ -64,12 +64,13 @@
     private ZonedDateTime lastFullUpdate;
 
     MailingListBridgeBot(EmailAddress from, HostedRepository repo, HostedRepository archive, String archiveRef,
                          HostedRepository censusRepo, String censusRef, List<MailingListConfiguration> lists,
                          Set<String> ignoredUsers, Set<Pattern> ignoredComments, URI listArchive, String smtpServer,
-                         HostedRepository webrevStorageRepository, String webrevStorageRef,
-                         Path webrevStorageBase, URI webrevStorageBaseUri, Set<String> readyLabels,
+                         HostedRepository webrevStorageHTMLRepository, HostedRepository webrevStorageJSONRepository,
+                         String webrevStorageRef, Path webrevStorageBase, URI webrevStorageBaseUri,
+                         boolean webrevGenerateHTML, boolean webrevGenerateJSON, Set<String> readyLabels,
                          Map<String, Pattern> readyComments, URI issueTracker, Map<String, String> headers,
                          Duration sendInterval, Duration cooldown, boolean repoInSubject, Pattern branchInSubject,
                          Path seedStorage) {
         emailAddress = from;
         codeRepo = repo;
@@ -90,12 +91,13 @@
         this.cooldown = cooldown;
         this.repoInSubject = repoInSubject;
         this.branchInSubject = branchInSubject;
         this.seedStorage = seedStorage;
 
-        webrevStorage = new WebrevStorage(webrevStorageRepository, webrevStorageRef, webrevStorageBase,
-                                          webrevStorageBaseUri, from);
+        webrevStorage = new WebrevStorage(webrevStorageHTMLRepository, webrevStorageJSONRepository, webrevStorageRef,
+                                          webrevStorageBase, webrevStorageBaseUri, from,
+                                          webrevGenerateHTML, webrevGenerateJSON);
         updateCache = new PullRequestUpdateCache();
         cooldownQuarantine = new CooldownQuarantine();
     }
 
     static MailingListBridgeBotBuilder newBuilder() {
diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotBuilder.java
@@ -41,14 +41,17 @@
     private List<MailingListConfiguration> lists;
     private Set<String> ignoredUsers = Set.of();
     private Set<Pattern> ignoredComments = Set.of();
     private URI listArchive;
     private String smtpServer;
-    private HostedRepository webrevStorageRepository;
+    private HostedRepository webrevStorageHTMLRepository;
+    private HostedRepository webrevStorageJSONRepository;
     private String webrevStorageRef;
     private Path webrevStorageBase;
     private URI webrevStorageBaseUri;
+    private boolean webrevGenerateHTML = true;
+    private boolean webrevGenerateJSON = false;
     private Set<String> readyLabels = Set.of();
     private Map<String, Pattern> readyComments = Map.of();
     private URI issueTracker;
     private Map<String, String> headers = Map.of();
     private Duration sendInterval = Duration.ZERO;
@@ -113,12 +116,17 @@
     public MailingListBridgeBotBuilder smtpServer(String smtpServer) {
         this.smtpServer = smtpServer;
         return this;
     }
 
-    public MailingListBridgeBotBuilder webrevStorageRepository(HostedRepository webrevStorageRepository) {
-        this.webrevStorageRepository = webrevStorageRepository;
+    public MailingListBridgeBotBuilder webrevStorageHTMLRepository(HostedRepository webrevStorageHTMLRepository) {
+        this.webrevStorageHTMLRepository = webrevStorageHTMLRepository;
+        return this;
+    }
+
+    public MailingListBridgeBotBuilder webrevStorageJSONRepository(HostedRepository webrevStorageJSONRepository) {
+        this.webrevStorageJSONRepository = webrevStorageJSONRepository;
         return this;
     }
 
     public MailingListBridgeBotBuilder webrevStorageRef(String webrevStorageRef) {
         this.webrevStorageRef = webrevStorageRef;
@@ -133,10 +141,20 @@
     public MailingListBridgeBotBuilder webrevStorageBaseUri(URI webrevStorageBaseUri) {
         this.webrevStorageBaseUri = webrevStorageBaseUri;
         return this;
     }
 
+    public MailingListBridgeBotBuilder webrevGenerateHTML(boolean webrevGenerateHTML) {
+        this.webrevGenerateHTML = webrevGenerateHTML;
+        return this;
+    }
+
+    public MailingListBridgeBotBuilder webrevGenerateJSON(boolean webrevGenerateJSON) {
+        this.webrevGenerateJSON = webrevGenerateJSON;
+        return this;
+    }
+
     public MailingListBridgeBotBuilder readyLabels(Set<String> readyLabels) {
         this.readyLabels = readyLabels;
         return this;
     }
 
@@ -181,10 +199,11 @@
     }
 
     public MailingListBridgeBot build() {
         return new MailingListBridgeBot(from, repo, archive, archiveRef, censusRepo, censusRef, lists,
                                         ignoredUsers, ignoredComments, listArchive, smtpServer,
-                                        webrevStorageRepository, webrevStorageRef, webrevStorageBase, webrevStorageBaseUri,
-                                        readyLabels, readyComments, issueTracker, headers, sendInterval, cooldown,
-                                        repoInSubject, branchInSubject, seedStorage);
+                                        webrevStorageHTMLRepository, webrevStorageJSONRepository, webrevStorageRef,
+                                        webrevStorageBase, webrevStorageBaseUri, webrevGenerateHTML, webrevGenerateJSON,
+                                        readyLabels, readyComments, issueTracker, headers, sendInterval,
+                                        cooldown, repoInSubject, branchInSubject, seedStorage);
     }
-}
+}
diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotFactory.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotFactory.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotFactory.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotFactory.java
@@ -77,11 +77,12 @@
                                       .collect(Collectors.toSet());
         var listArchive = URIBuilder.base(specific.get("server").get("archive").asString()).build();
         var listSmtp = specific.get("server").get("smtp").asString();
         var interval = specific.get("server").contains("interval") ? Duration.parse(specific.get("server").get("interval").asString()) : Duration.ofSeconds(1);
 
-        var webrevRepo = configuration.repository(specific.get("webrevs").get("repository").asString());
+        var webrevHTMLRepo = configuration.repository(specific.get("webrevs").get("repository").get("html").asString());
+        var webrevJSONRepo = configuration.repository(specific.get("webrevs").get("repository").get("json").asString());
         var webrevRef = configuration.repositoryRef(specific.get("webrevs").get("repository").asString());
         var webrevWeb = specific.get("webrevs").get("web").asString();
 
         var archiveRepo = configuration.repository(specific.get("archive").asString());
         var archiveRef = configuration.repositoryRef(specific.get("archive").asString());
@@ -108,10 +109,21 @@
                     repoConfig.get("headers").fields().stream()
                               .collect(Collectors.toMap(JSONObject.Field::name, field -> field.value().asString())) :
                     Map.of();
             var lists = parseLists(repoConfig.get("lists"));
             var folder = repoConfig.contains("folder") ? repoConfig.get("folder").asString() : configuration.repositoryName(repo);
+
+            var webrevGenerateHTML = true;
+            if (repoConfig.contains("webrev") &&
+                repoConfig.get("webrev").contains("html") &&
+                repoConfig.get("webrev").get("html").asBoolean() == false) {
+                webrevGenerateHTML = false;
+            }
+            var webrevGenerateJSON = repoConfig.contains("webrev") &&
+                                     repoConfig.get("webrev").contains("json") &&
+                                     repoConfig.get("webrev").get("json").asBoolean();
+
             var botBuilder = MailingListBridgeBot.newBuilder().from(from)
                                                  .repo(configuration.repository(repo))
                                                  .archive(archiveRepo)
                                                  .archiveRef(archiveRef)
                                                  .censusRepo(censusRepo)
@@ -119,14 +131,17 @@
                                                  .lists(lists)
                                                  .ignoredUsers(ignoredUsers)
                                                  .ignoredComments(ignoredComments)
                                                  .listArchive(listArchive)
                                                  .smtpServer(listSmtp)
-                                                 .webrevStorageRepository(webrevRepo)
+                                                 .webrevStorageHTMLRepository(webrevHTMLRepo)
+                                                 .webrevStorageJSONRepository(webrevJSONRepo)
                                                  .webrevStorageRef(webrevRef)
                                                  .webrevStorageBase(Path.of(folder))
                                                  .webrevStorageBaseUri(URIBuilder.base(webrevWeb).build())
+                                                 .webrevGenerateHTML(webrevGenerateHTML)
+                                                 .webrevGenerateJSON(webrevGenerateJSON)
                                                  .readyLabels(readyLabels)
                                                  .readyComments(readyComments)
                                                  .issueTracker(issueTracker)
                                                  .headers(headers)
                                                  .sendInterval(interval)
diff a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java
--- a/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java
+++ b/bots/mlbridge/src/main/java/org/openjdk/skara/bots/mlbridge/WebrevStorage.java
@@ -41,29 +41,57 @@
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.logging.Logger;
 import java.util.stream.Collectors;
 
 class WebrevStorage {
-    private final HostedRepository storage;
+    private final HostedRepository htmlStorage;
+    private final HostedRepository jsonStorage;
     private final String storageRef;
     private final Path baseFolder;
     private final URI baseUri;
     private final EmailAddress author;
+    private final boolean generateHTML;
+    private final boolean generateJSON;
     private final Logger log = Logger.getLogger("org.openjdk.skara.bots.mlbridge");
     private static final HttpClient client = HttpClient.newBuilder()
                                                        .connectTimeout(Duration.ofSeconds(10))
                                                        .build();
 
-    WebrevStorage(HostedRepository storage, String ref, Path baseFolder, URI baseUri, EmailAddress author) {
+    WebrevStorage(HostedRepository htmlStorage,
+                  String ref,
+                  Path baseFolder,
+                  URI baseUri,
+                  EmailAddress author) {
         this.baseFolder = baseFolder;
         this.baseUri = baseUri;
-        this.storage = storage;
+        this.htmlStorage = htmlStorage;
+        this.jsonStorage = null;
         storageRef = ref;
         this.author = author;
+        this.generateHTML = true;
+        this.generateJSON = false;
     }
 
-    private void generate(PullRequest pr, Repository localRepository, Path folder, Diff diff, Hash base, Hash head) throws IOException {
+    WebrevStorage(HostedRepository htmlStorage,
+                  HostedRepository jsonStorage,
+                  String ref,
+                  Path baseFolder,
+                  URI baseUri,
+                  EmailAddress author,
+                  boolean generateHTML,
+                  boolean generateJSON) {
+        this.baseFolder = baseFolder;
+        this.baseUri = baseUri;
+        this.htmlStorage = htmlStorage;
+        this.jsonStorage = jsonStorage;
+        storageRef = ref;
+        this.author = author;
+        this.generateHTML = generateHTML;
+        this.generateJSON = generateJSON;
+    }
+
+    private void generateHTML(PullRequest pr, ReadOnlyRepository localRepository, Path folder, Diff diff, Hash base, Hash head) throws IOException {
         Files.createDirectories(folder);
         var fullName = pr.author().fullName();
         var builder = Webrev.repository(localRepository)
                             .output(folder)
                             .version(Version.fromManifest().orElse("unknown"))
@@ -97,10 +125,28 @@
         } else {
             builder.generate(base, head);
         }
     }
 
+    private void generateJSON(PullRequest pr, ReadOnlyRepository localRepository, Path folder, Diff diff, Hash base, Hash head) throws IOException {
+        Files.createDirectories(folder);
+        var builder = Webrev.repository(localRepository)
+                            .output(folder)
+                            .upstream(pr.repository().webUrl(), pr.repository().name());
+        var sourceRepository = pr.sourceRepository();
+        if (sourceRepository.isEmpty()) {
+            throw new IllegalArgumentException("Cannot generate JSON for PR without source repository. PR: " + pr.id() + ", repo: " + pr.repository().webUrl());
+        }
+        builder.fork(sourceRepository.get().webUrl(), sourceRepository.get().name());
+
+        if (diff != null) {
+            builder.generateJSON(diff);
+        } else {
+            builder.generateJSON(base, head);
+        }
+    }
+
     private String generatePlaceholder(PullRequest pr, Hash base, Hash head) {
         return "This file was too large to be included in the published webrev, and has been replaced with " +
                 "this placeholder message. It is possible to generate the original content locally by " +
                 "following these instructions:\n\n" +
                 "  $ git fetch " + pr.repository().webUrl() + " " + pr.fetchRef() + "\n" +
@@ -137,11 +183,11 @@
         } catch (IOException e) {
             return false;
         }
     }
 
-    private void push(Repository localStorage, Path webrevFolder, String identifier, String placeholder) throws IOException {
+    private void push(Repository localStorage, URI remote, Path webrevFolder, String identifier, String placeholder) throws IOException {
         var batchIndex = new AtomicInteger();
 
         // Replace large files (except the index) with placeholders
         try (var files = Files.walk(webrevFolder)) {
             files.filter(Files::isRegularFile)
@@ -167,11 +213,11 @@
                 } catch (IOException e) {
                     // If the commit fails, it probably means that we're resuming a partially completed previous update
                     // where some of the files have already been committed. Ignore it and continue.
                     continue;
                 }
-                localStorage.push(hash, storage.url(), storageRef);
+                localStorage.push(hash, remote, storageRef);
             }
         }
     }
 
     private static void clearDirectory(Path directory) {
@@ -218,25 +264,41 @@
         throw new RuntimeException("No success response from " + uri + " within " + timeout);
     }
 
     private URI createAndArchive(PullRequest pr, Repository localRepository, Path scratchPath, Diff diff, Hash base, Hash head, String identifier) {
         try {
-            var localStorage = Repository.materialize(scratchPath, storage.url(),
-                                                      "+" + storageRef + ":mlbridge_webrevs");
             var relativeFolder = baseFolder.resolve(String.format("%s/%s", pr.id(), identifier));
             var outputFolder = scratchPath.resolve(relativeFolder);
-            // If a previous operation was interrupted there may be content here already - overwrite if so
-            if (Files.exists(outputFolder)) {
-                clearDirectory(outputFolder);
-            }
-            generate(pr, localRepository, outputFolder, diff, base, head);
             var placeholder = generatePlaceholder(pr, base, head);
-            if (!localStorage.isClean()) {
-                push(localStorage, outputFolder, baseFolder.resolve(pr.id()).toString(), placeholder);
+            URI uri = null;
+
+            if (generateJSON) {
+                var jsonLocalStorage = Repository.materialize(scratchPath, jsonStorage.url(),
+                                                              "+" + storageRef + ":mlbridge_webrevs");
+                if (Files.exists(outputFolder)) {
+                    clearDirectory(outputFolder);
+                }
+                generateJSON(pr, localRepository, outputFolder, diff, base, head);
+                if (!jsonLocalStorage.isClean()) {
+                    push(jsonLocalStorage, jsonStorage.url(), outputFolder, baseFolder.resolve(pr.id()).toString(), placeholder);
+                }
+                var repoName = Path.of(pr.repository().name()).getFileName();
+                uri = URI.create(baseUri.toString() + "?repo=" + repoName + "&pr=" + pr.id() + "&range=" + identifier);
+            }
+            if (generateHTML) {
+                var htmlLocalStorage = Repository.materialize(scratchPath, htmlStorage.url(),
+                                                              "+" + storageRef + ":mlbridge_webrevs");
+                if (Files.exists(outputFolder)) {
+                    clearDirectory(outputFolder);
+                }
+                generateHTML(pr, localRepository, outputFolder, diff, base, head);
+                if (!htmlLocalStorage.isClean()) {
+                    push(htmlLocalStorage, htmlStorage.url(), outputFolder, baseFolder.resolve(pr.id()).toString(), placeholder);
+                }
+                uri = URIBuilder.base(baseUri).appendPath(relativeFolder.toString().replace('\\', '/')).build();
+                awaitPublication(uri, Duration.ofMinutes(30));
             }
-            var uri = URIBuilder.base(baseUri).appendPath(relativeFolder.toString().replace('\\', '/')).build();
-            awaitPublication(uri, Duration.ofMinutes(30));
             return uri;
         } catch (IOException e) {
             throw new UncheckedIOException(e);
         }
     }
diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListArchiveReaderBotTests.java
@@ -74,11 +74,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -149,11 +149,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .repoInSubject(true)
@@ -226,11 +226,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
diff a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
--- a/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
+++ b/bots/mlbridge/src/test/java/org/openjdk/skara/bots/mlbridge/MailingListBridgeBotTests.java
@@ -27,10 +27,11 @@
 import org.openjdk.skara.issuetracker.Issue;
 import org.openjdk.skara.network.URIBuilder;
 import org.openjdk.skara.mailinglist.MailingListServerFactory;
 import org.openjdk.skara.test.*;
 import org.openjdk.skara.vcs.Repository;
+import org.openjdk.skara.json.JSON;
 
 import org.junit.jupiter.api.*;
 
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
@@ -125,11 +126,11 @@
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .ignoredComments(Set.of())
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .readyLabels(Set.of("rfr"))
                                             .readyComments(Map.of(ignored.forge().currentUser().userName(), Pattern.compile("ready")))
@@ -292,11 +293,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -366,11 +367,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -440,11 +441,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -519,11 +520,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .readyLabels(Set.of("rfr"))
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
@@ -596,11 +597,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .readyLabels(Set.of("rfr"))
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
@@ -679,11 +680,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -733,11 +734,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -827,11 +828,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -922,11 +923,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1051,11 +1052,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1114,11 +1115,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1178,11 +1179,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1243,11 +1244,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1306,11 +1307,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1363,11 +1364,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1439,11 +1440,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1505,11 +1506,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1635,11 +1636,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1732,11 +1733,11 @@
                                             .archiveRef("archive")
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1822,11 +1823,11 @@
                                             .archiveRef("archive")
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1908,11 +1909,11 @@
                                             .archiveRef("archive")
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -1980,11 +1981,11 @@
                                             .archiveRef("archive")
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -2051,11 +2052,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -2131,11 +2132,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -2222,11 +2223,11 @@
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
                                             .ignoredComments(Set.of(Pattern.compile("ignore this comment", Pattern.MULTILINE | Pattern.DOTALL)))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -2287,11 +2288,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -2348,11 +2349,11 @@
                                                    .archive(archive)
                                                    .censusRepo(censusBuilder.build())
                                                    .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                                    .listArchive(listServer.getArchive())
                                                    .smtpServer(listServer.getSMTP())
-                                                   .webrevStorageRepository(archive)
+                                                   .webrevStorageHTMLRepository(archive)
                                                    .webrevStorageRef("webrev")
                                                    .webrevStorageBase(Path.of("test"))
                                                    .webrevStorageBaseUri(webrevServer.uri())
                                                    .issueTracker(URIBuilder.base("http://issues.test/browse/").build());
 
@@ -2413,11 +2414,11 @@
                                                    .archive(archive)
                                                    .censusRepo(censusBuilder.build())
                                                    .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                                    .listArchive(listServer.getArchive())
                                                    .smtpServer(listServer.getSMTP())
-                                                   .webrevStorageRepository(archive)
+                                                   .webrevStorageHTMLRepository(archive)
                                                    .webrevStorageRef("webrev")
                                                    .webrevStorageBase(Path.of("test"))
                                                    .webrevStorageBaseUri(webrevServer.uri())
                                                    .issueTracker(URIBuilder.base("http://issues.test/browse/").build());
 
@@ -2480,11 +2481,11 @@
                                                    .archive(archive)
                                                    .censusRepo(censusBuilder.build())
                                                    .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                                    .listArchive(listServer.getArchive())
                                                    .smtpServer(listServer.getSMTP())
-                                                   .webrevStorageRepository(archive)
+                                                   .webrevStorageHTMLRepository(archive)
                                                    .webrevStorageRef("webrev")
                                                    .webrevStorageBase(Path.of("test"))
                                                    .webrevStorageBaseUri(webrevServer.uri())
                                                    .issueTracker(URIBuilder.base("http://issues.test/browse/").build());
 
@@ -2569,11 +2570,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .branchInSubject(Pattern.compile(".*"))
@@ -2626,11 +2627,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .repoInSubject(true)
@@ -2683,11 +2684,11 @@
                                             .archive(archive)
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .repoInSubject(true)
@@ -2744,11 +2745,11 @@
                                                    .archive(archive)
                                                    .censusRepo(censusBuilder.build())
                                                    .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
                                                    .listArchive(listServer.getArchive())
                                                    .smtpServer(listServer.getSMTP())
-                                                   .webrevStorageRepository(archive)
+                                                   .webrevStorageHTMLRepository(archive)
                                                    .webrevStorageRef("webrev")
                                                    .webrevStorageBase(Path.of("test"))
                                                    .webrevStorageBaseUri(webrevServer.uri())
                                                    .issueTracker(URIBuilder.base("http://issues.test/browse/").build());
 
@@ -2836,11 +2837,11 @@
                                             .censusRepo(censusBuilder.build())
                                             .lists(List.of(new MailingListConfiguration(listAddress1, Set.of("list1")),
                                                            new MailingListConfiguration(listAddress2, Set.of("list2"))))
                                             .listArchive(listServer.getArchive())
                                             .smtpServer(listServer.getSMTP())
-                                            .webrevStorageRepository(archive)
+                                            .webrevStorageHTMLRepository(archive)
                                             .webrevStorageRef("webrev")
                                             .webrevStorageBase(Path.of("test"))
                                             .webrevStorageBaseUri(webrevServer.uri())
                                             .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
                                             .build();
@@ -2890,6 +2891,207 @@
             assertEquals(noreplyAddress(archive), reply.author().address());
             assertEquals(listAddress1, reply.sender());
             assertEquals(List.of(listAddress1, listAddress2), reply.recipients());
         }
     }
+
+    @Test
+    void jsonArchive(TestInfo testInfo) throws IOException {
+        try (var credentials = new HostCredentials(testInfo);
+             var tempFolder = new TemporaryDirectory();
+             var archiveFolder = new TemporaryDirectory();
+             var webrevFolder = new TemporaryDirectory(false);
+             var listServer = new TestMailmanServer();
+             var webrevServer = new TestWebrevServer()) {
+            var author = credentials.getHostedRepository();
+            var archive = credentials.getHostedRepository();
+            var ignored = credentials.getHostedRepository();
+            var listAddress = EmailAddress.parse(listServer.createList("test"));
+            var censusBuilder = credentials.getCensusBuilder()
+                                           .addAuthor(author.forge().currentUser().id());
+            var from = EmailAddress.from("test", "test@test.mail");
+            var mlBot = MailingListBridgeBot.newBuilder()
+                                            .from(from)
+                                            .repo(author)
+                                            .archive(archive)
+                                            .censusRepo(censusBuilder.build())
+                                            .lists(List.of(new MailingListConfiguration(listAddress, Set.of())))
+                                            .ignoredUsers(Set.of(ignored.forge().currentUser().userName()))
+                                            .ignoredComments(Set.of())
+                                            .listArchive(listServer.getArchive())
+                                            .smtpServer(listServer.getSMTP())
+                                            .webrevStorageJSONRepository(archive)
+                                            .webrevStorageRef("webrev")
+                                            .webrevStorageBase(Path.of("test"))
+                                            .webrevStorageBaseUri(webrevServer.uri())
+                                            .webrevGenerateHTML(false)
+                                            .webrevGenerateJSON(true)
+                                            .readyLabels(Set.of("rfr"))
+                                            .readyComments(Map.of(ignored.forge().currentUser().userName(), Pattern.compile("ready")))
+                                            .issueTracker(URIBuilder.base("http://issues.test/browse/").build())
+                                            .headers(Map.of("Extra1", "val1", "Extra2", "val2"))
+                                            .sendInterval(Duration.ZERO)
+                                            .build();
+
+            // Populate the projects repository
+            var localRepo = CheckableRepository.init(tempFolder.path(), author.repositoryType());
+            var masterHash = localRepo.resolve("master").orElseThrow();
+            localRepo.push(masterHash, author.url(), "master", true);
+            localRepo.push(masterHash, archive.url(), "webrev", true);
+
+            // Make a change with a corresponding PR
+            var editHash = CheckableRepository.appendAndCommit(localRepo, "A simple change",
+                                                               "Change msg\n\nWith several lines");
+            localRepo.push(editHash, author.url(), "edit", true);
+            var pr = credentials.createPullRequest(archive, "master", "edit", "1234: This is a pull request");
+            pr.setBody("This should not be ready");
+
+            // Run an archive pass
+            TestBotRunner.runPeriodicItems(mlBot);
+
+            // A PR that isn't ready for review should not be archived
+            Repository.materialize(archiveFolder.path(), archive.url(), "master");
+            assertFalse(archiveContains(archiveFolder.path(), "This is a pull request"));
+
+            // Flag it as ready for review
+            pr.setBody("This should now be ready");
+            pr.addLabel("rfr");
+
+            // Run another archive pass
+            TestBotRunner.runPeriodicItems(mlBot);
+
+            // But it should still not be archived
+            Repository.materialize(archiveFolder.path(), archive.url(), "master");
+            assertFalse(archiveContains(archiveFolder.path(), "This is a pull request"));
+
+            // Now post a general comment - not a ready marker
+            var ignoredPr = ignored.pullRequest(pr.id());
+            ignoredPr.addComment("hello there");
+
+            // Run another archive pass
+            TestBotRunner.runPeriodicItems(mlBot);
+
+            // It should still not be archived
+            Repository.materialize(archiveFolder.path(), archive.url(), "master");
+            assertFalse(archiveContains(archiveFolder.path(), "This is a pull request"));
+
+            // Now post a ready comment
+            ignoredPr.addComment("ready");
+
+            // Run another archive pass
+            TestBotRunner.runPeriodicItems(mlBot);
+
+            // The archive should now contain an entry
+            Repository.materialize(archiveFolder.path(), archive.url(), "master");
+            assertTrue(archiveContains(archiveFolder.path(), "This is a pull request"));
+            assertTrue(archiveContains(archiveFolder.path(), "This should now be ready"));
+            assertTrue(archiveContains(archiveFolder.path(), "Patch:"));
+            assertTrue(archiveContains(archiveFolder.path(), "Changes:"));
+            assertTrue(archiveContains(archiveFolder.path(), "Webrev:"));
+            assertTrue(archiveContains(archiveFolder.path(), webrevServer.uri().toString()));
+            assertTrue(archiveContains(archiveFolder.path(), "&pr=" + pr.id() + "&range=00"));
+            assertTrue(archiveContains(archiveFolder.path(), "Issue:"));
+            assertTrue(archiveContains(archiveFolder.path(), "http://issues.test/browse/TSTPRJ-1234"));
+            assertTrue(archiveContains(archiveFolder.path(), "Fetch:"));
+            assertTrue(archiveContains(archiveFolder.path(), "^ - Change msg"));
+            assertFalse(archiveContains(archiveFolder.path(), "With several lines"));
+
+            // The mailing list as well
+            listServer.processIncoming();
+            var mailmanServer = MailingListServerFactory.createMailmanServer(listServer.getArchive(), listServer.getSMTP(), Duration.ZERO);
+            var mailmanList = mailmanServer.getList(listAddress.address());
+            var conversations = mailmanList.conversations(Duration.ofDays(1));
+            assertEquals(1, conversations.size());
+            var mail = conversations.get(0).first();
+            assertEquals("RFR: 1234: This is a pull request", mail.subject());
+            assertEquals(pr.author().fullName(), mail.author().fullName().orElseThrow());
+            assertEquals(noreplyAddress(archive), mail.author().address());
+            assertEquals(listAddress, mail.sender());
+            assertEquals("val1", mail.headerValue("Extra1"));
+            assertEquals("val2", mail.headerValue("Extra2"));
+
+            // And there should be a JSON version of a webrev
+            Repository.materialize(webrevFolder.path(), archive.url(), "webrev");
+            var jsonDir = webrevFolder.path()
+                                      .resolve(author.name())
+                                      .resolve(pr.id())
+                                      .resolve("00");
+            assertTrue(Files.exists(jsonDir));
+            assertTrue(Files.isDirectory(jsonDir));
+
+            var commitsFile = jsonDir.resolve("commits.json");
+            assertTrue(Files.exists(commitsFile));
+            var commits = JSON.parse(Files.readString(commitsFile));
+            assertEquals(1, commits.asArray().size());
+            var commit = commits.get(0);
+            assertEquals(editHash.hex(), commit.get("sha").asString());
+            assertEquals("Change msg\n\nWith several lines", commit.get("commit").get("message").asString());
+            assertEquals(1, commit.get("files").asArray().size());
+
+            var metadataFile = jsonDir.resolve("metadata.json");
+            assertTrue(Files.exists(metadataFile));
+            var metadata = JSON.parse(Files.readString(metadataFile));
+            assertEquals(masterHash.hex(), metadata.get("base").get("sha").asString());
+            assertEquals(editHash.hex(), metadata.get("head").get("sha").asString());
+
+            var comparisonFile = jsonDir.resolve("comparison.json");
+            assertTrue(Files.exists(comparisonFile));
+            var comparsion = JSON.parse(Files.readString(comparisonFile));
+            assertEquals(1, comparsion.get("files").asArray().size());
+            assertEquals("modified", comparsion.get("files").get(0).get("status").asString());
+            assertTrue(comparsion.get("files").get(0).get("patch").asString().contains("A simple change"));
+
+            var comments = pr.comments();
+            var webrevComments = comments.stream()
+                                         .filter(comment -> comment.author().equals(author.forge().currentUser()))
+                                         .filter(comment -> comment.body().contains("webrev"))
+                                         .filter(comment -> comment.body().contains(editHash.hex()))
+                                         .collect(Collectors.toList());
+            assertEquals(1, webrevComments.size());
+            var comment = webrevComments.get(0);
+            assertTrue(comment.body().contains("&pr=" + pr.id()));
+            assertTrue(comment.body().contains("&range=00"));
+
+            // Add a comment
+            pr.addComment("This is a comment :smile:");
+
+            // Add a comment from an ignored user as well
+            ignoredPr.addComment("Don't mind me");
+
+            // Run another archive pass
+            TestBotRunner.runPeriodicItems(mlBot);
+
+            // The archive should now contain the comment, but not the ignored one
+            Repository.materialize(archiveFolder.path(), archive.url(), "master");
+            assertTrue(archiveContains(archiveFolder.path(), "This is a comment"));
+            assertTrue(archiveContains(archiveFolder.path(), "> This should now be ready"));
+            assertFalse(archiveContains(archiveFolder.path(), "Don't mind me"));
+
+            listServer.processIncoming();
+            conversations = mailmanList.conversations(Duration.ofDays(1));
+            assertEquals(1, conversations.size());
+            assertEquals(2, conversations.get(0).allMessages().size());
+
+            // Remove the rfr flag and post another comment
+            pr.addLabel("rfr");
+            pr.addComment("This is another comment");
+
+            // Run another archive pass
+            TestBotRunner.runPeriodicItems(mlBot);
+
+            // The archive should contain the additional comment
+            Repository.materialize(archiveFolder.path(), archive.url(), "master");
+            assertTrue(archiveContains(archiveFolder.path(), "This is another comment"));
+            assertTrue(archiveContains(archiveFolder.path(), ">> This should now be ready"));
+
+            listServer.processIncoming();
+            conversations = mailmanList.conversations(Duration.ofDays(1));
+            assertEquals(1, conversations.size());
+            assertEquals(3, conversations.get(0).allMessages().size());
+            for (var newMail : conversations.get(0).allMessages()) {
+                assertEquals(noreplyAddress(archive), newMail.author().address());
+                assertEquals(listAddress, newMail.sender());
+            }
+            assertTrue(conversations.get(0).allMessages().get(2).body().contains("This is a comment 😄"));
+        }
+    }
 }

diff a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
@@ -125,10 +125,15 @@
             Option.shortcut("")
                   .fullname("remote")
                   .describe("NAME")
                   .helptext("Use remote to calculate outgoing changes")
                   .optional(),
+            Option.shortcut("s")
+                  .fullname("similarity")
+                  .describe("SIMILARITY")
+                  .helptext("Guess renamed files by similarity (0 - 100)")
+                  .optional(),
             Switch.shortcut("b")
                   .fullname("")
                   .helptext("Do not ignore changes in whitespace (always true)")
                   .optional(),
             Switch.shortcut("m")
@@ -350,10 +355,26 @@
             } else {
                 files = Files.readAllLines(path).stream().map(Path::of).collect(Collectors.toList());
             }
         }
 
+        var similarity = 90;
+        try {
+            var similarityArg = arg("similarity", arguments, repo);
+            if (similarityArg != null) {
+                var value = Integer.parseInt(similarityArg);
+                if (value < 0 || value > 100) {
+                    System.err.println("error: --similarity must be a number between 0 and 100");
+                    System.exit(1);
+                }
+                similarity = value;
+            }
+        } catch (NumberFormatException e) {
+                System.err.println("error: --similarity must be a number between 0 and 100");
+                System.exit(1);
+        }
+
         var jbs = "https://bugs.openjdk.java.net/browse/";
         var issueParts = issue != null ? issue.split("-") : new String[0];
         var jbsProject = issueParts.length == 2 && KNOWN_JBS_PROJECTS.contains(issueParts[0])?
             issueParts[0] : "JDK";
         Webrev.repository(repo)
@@ -364,10 +385,11 @@
               .commitLinker(hash -> upstreamURL == null ? null : upstreamURL + "/commit/" + hash)
               .issueLinker(id -> jbs + (isDigit(id.charAt(0)) ? jbsProject + "-" : "") + id)
               .issue(issue)
               .version(version)
               .files(files)
+              .similarity(similarity)
               .generate(rev);
     }
 
     private static void apply(String[] args) throws Exception {
         var inputs = List.of(
diff a/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java b/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
--- a/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
+++ b/jcheck/src/test/java/org/openjdk/skara/jcheck/TestRepository.java
@@ -232,23 +232,23 @@
     }
 
     public void dump(FileEntry entry, Path to) throws IOException {
     }
 
-    public Diff diff(Hash base, Hash head) throws IOException {
+    public Diff diff(Hash base, Hash head, int similarity) throws IOException {
         return null;
     }
 
-    public Diff diff(Hash base, Hash head, List<Path> files) throws IOException {
+    public Diff diff(Hash base, Hash head, List<Path> files, int similarity) throws IOException {
         return null;
     }
 
-    public Diff diff(Hash head) throws IOException {
+    public Diff diff(Hash head, int similarity) throws IOException {
         return null;
     }
 
-    public Diff diff(Hash head, List<Path> files) throws IOException {
+    public Diff diff(Hash head, List<Path> files, int similarity) throws IOException {
         return null;
     }
 
     public List<String> config(String key) throws IOException {
         return null;
diff a/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/ReadOnlyRepository.java
@@ -100,14 +100,29 @@
     }
 
     void dump(FileEntry entry, Path to) throws IOException;
     List<StatusEntry> status(Hash from, Hash to) throws IOException;
     List<StatusEntry> status() throws IOException;
-    Diff diff(Hash base, Hash head) throws IOException;
-    Diff diff(Hash base, Hash head, List<Path> files) throws IOException;
-    Diff diff(Hash head) throws IOException;
-    Diff diff(Hash head, List<Path> files) throws IOException;
+
+    static final int DEFAULT_SIMILARITY = 90;
+    default Diff diff(Hash base, Hash head) throws IOException {
+        return diff(base, head, DEFAULT_SIMILARITY);
+    }
+    Diff diff(Hash base, Hash head, int similarity) throws IOException;
+    default Diff diff(Hash base, Hash head, List<Path> files) throws IOException {
+        return diff(base, head, files, DEFAULT_SIMILARITY);
+    }
+    Diff diff(Hash base, Hash head, List<Path> files, int similarity) throws IOException;
+    default Diff diff(Hash head) throws IOException {
+        return diff(head, DEFAULT_SIMILARITY);
+    }
+    Diff diff(Hash head, int similarity) throws IOException;
+    default Diff diff(Hash head, List<Path> files) throws IOException {
+        return diff(head, files, DEFAULT_SIMILARITY);
+    }
+
+    Diff diff(Hash head, List<Path> files, int similarity) throws IOException;
     List<String> config(String key) throws IOException;
     Repository copyTo(Path destination) throws IOException;
     String pullPath(String remote) throws IOException;
     String pushPath(String remote) throws IOException;
     boolean isValidRevisionRange(String expression) throws IOException;
diff a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/git/GitRepository.java
@@ -996,29 +996,32 @@
     public List<StatusEntry> status() throws IOException {
         return status(null, null);
     }
 
     @Override
-    public Diff diff(Hash from) throws IOException {
-        return diff(from, List.of());
+    public Diff diff(Hash from, int similarity) throws IOException {
+        return diff(from, List.of(), similarity);
     }
 
     @Override
-    public Diff diff(Hash from, List<Path> files) throws IOException {
-        return diff(from, null, files);
+    public Diff diff(Hash from, List<Path> files, int similarity) throws IOException {
+        return diff(from, null, files, similarity);
     }
 
     @Override
-    public Diff diff(Hash from, Hash to) throws IOException {
-        return diff(from, to, List.of());
+    public Diff diff(Hash from, Hash to, int similarity) throws IOException {
+        return diff(from, to, List.of(), similarity);
     }
 
     @Override
-    public Diff diff(Hash from, Hash to, List<Path> files) throws IOException {
+    public Diff diff(Hash from, Hash to, List<Path> files, int similarity) throws IOException {
+        if (similarity < 0 || similarity > 100) {
+            throw new IllegalArgumentException("similarity must be between 0 and 100, is: "  + similarity);
+        }
         var cmd = new ArrayList<>(List.of("git", "diff", "--patch",
-                                                         "--find-renames=90%",
-                                                         "--find-copies=90%",
+                                                         "--find-renames=" + similarity + "%",
+                                                         "--find-copies=" + similarity + "%",
                                                          "--find-copies-harder",
                                                          "--binary",
                                                          "--raw",
                                                          "--no-abbrev",
                                                          "--unified=0",
diff a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
--- a/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
+++ b/vcs/src/main/java/org/openjdk/skara/vcs/hg/HgRepository.java
@@ -844,26 +844,26 @@
             await(p);
         }
     }
 
     @Override
-    public Diff diff(Hash from) throws IOException {
+    public Diff diff(Hash from, int similarity) throws IOException {
         return diff(from, List.of());
     }
 
     @Override
-    public Diff diff(Hash from, List<Path> files) throws IOException {
+    public Diff diff(Hash from, List<Path> files, int similarity) throws IOException {
         return diff(from, null, files);
     }
 
     @Override
-    public Diff diff(Hash from, Hash to) throws IOException {
+    public Diff diff(Hash from, Hash to, int similarity) throws IOException {
         return diff(from, to, List.of());
     }
 
     @Override
-    public Diff diff(Hash from, Hash to, List<Path> files) throws IOException {
+    public Diff diff(Hash from, Hash to, List<Path> files, int similarity) throws IOException {
         var ext = Files.createTempFile("ext", ".py");
         copyResource(EXT_PY, ext);
 
         var cmd = new ArrayList<>(List.of("hg", "--config", "extensions.diff-git-raw=" + ext.toAbsolutePath(),
                                                 "diff-git-raw", "--patch", from.hex()));
diff a/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java b/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java
--- a/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java
+++ b/webrev/src/main/java/org/openjdk/skara/webrev/Webrev.java
@@ -72,10 +72,11 @@
         private String issue;
         private Function<String, String> issueLinker;
         private Function<String, String> commitLinker;
         private String version;
         private List<Path> files = List.of();
+        private int similarity = 90;
 
         Builder(ReadOnlyRepository repository, Path output) {
             this.repository = repository;
             this.output = output;
         }
@@ -128,18 +129,23 @@
         public Builder files(List<Path> files) {
             this.files = files;
             return this;
         }
 
+        public Builder similarity(int similarity) {
+            this.similarity = similarity;
+            return this;
+        }
+
         public void generate(Hash tailEnd) throws IOException {
             generate(tailEnd, null);
         }
 
         public void generate(Hash tailEnd, Hash head) throws IOException {
             var diff = head == null ?
-                    repository.diff(tailEnd, files) :
-                    repository.diff(tailEnd, head, files);
+                    repository.diff(tailEnd, files, similarity) :
+                    repository.diff(tailEnd, head, files, similarity);
             generate(diff, tailEnd, head);
         }
 
         public void generate(Diff diff) throws IOException {
             generate(diff, diff.from(), diff.to());

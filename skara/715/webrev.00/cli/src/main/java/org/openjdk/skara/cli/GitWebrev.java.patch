diff a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
@@ -125,10 +125,15 @@
             Option.shortcut("")
                   .fullname("remote")
                   .describe("NAME")
                   .helptext("Use remote to calculate outgoing changes")
                   .optional(),
+            Option.shortcut("s")
+                  .fullname("similarity")
+                  .describe("SIMILARITY")
+                  .helptext("Guess renamed files by similarity (0 - 100)")
+                  .optional(),
             Switch.shortcut("b")
                   .fullname("")
                   .helptext("Do not ignore changes in whitespace (always true)")
                   .optional(),
             Switch.shortcut("m")
@@ -350,10 +355,26 @@
             } else {
                 files = Files.readAllLines(path).stream().map(Path::of).collect(Collectors.toList());
             }
         }
 
+        var similarity = 90;
+        try {
+            var similarityArg = arg("similarity", arguments, repo);
+            if (similarityArg != null) {
+                var value = Integer.parseInt(similarityArg);
+                if (value < 0 || value > 100) {
+                    System.err.println("error: --similarity must be a number between 0 and 100");
+                    System.exit(1);
+                }
+                similarity = value;
+            }
+        } catch (NumberFormatException e) {
+                System.err.println("error: --similarity must be a number between 0 and 100");
+                System.exit(1);
+        }
+
         var jbs = "https://bugs.openjdk.java.net/browse/";
         var issueParts = issue != null ? issue.split("-") : new String[0];
         var jbsProject = issueParts.length == 2 && KNOWN_JBS_PROJECTS.contains(issueParts[0])?
             issueParts[0] : "JDK";
         Webrev.repository(repo)
@@ -364,10 +385,11 @@
               .commitLinker(hash -> upstreamURL == null ? null : upstreamURL + "/commit/" + hash)
               .issueLinker(id -> jbs + (isDigit(id.charAt(0)) ? jbsProject + "-" : "") + id)
               .issue(issue)
               .version(version)
               .files(files)
+              .similarity(similarity)
               .generate(rev);
     }
 
     private static void apply(String[] args) throws Exception {
         var inputs = List.of(

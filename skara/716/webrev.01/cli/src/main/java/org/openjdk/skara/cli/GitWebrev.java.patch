diff a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
--- a/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
+++ b/cli/src/main/java/org/openjdk/skara/cli/GitWebrev.java
@@ -93,11 +93,11 @@
     private static void generate(String[] args) throws IOException {
         var flags = List.of(
             Option.shortcut("r")
                   .fullname("rev")
                   .describe("REV")
-                  .helptext("Compare against a specified revision")
+                  .helptext("Compare against a specified base revision (alias for --base)")
                   .optional(),
             Option.shortcut("o")
                   .fullname("output")
                   .describe("DIR")
                   .helptext("Output directory")
@@ -125,10 +125,20 @@
             Option.shortcut("")
                   .fullname("remote")
                   .describe("NAME")
                   .helptext("Use remote to calculate outgoing changes")
                   .optional(),
+            Option.shortcut("")
+                  .fullname("base")
+                  .describe("REV")
+                  .helptext("Use specified revision as base for comparison")
+                  .optional(),
+            Option.shortcut("")
+                  .fullname("head")
+                  .describe("REV")
+                  .helptext("Use specified revision as head for comparison")
+                  .optional(),
             Option.shortcut("s")
                   .fullname("similarity")
                   .describe("SIMILARITY")
                   .helptext("Guess renamed files by similarity (0 - 100)")
                   .optional(),
@@ -227,12 +237,25 @@
                 var enabled = Set.of("TRUE", "ON", "1", "ENABLED");
                 noOutgoing = enabled.contains(config.get(0).toUpperCase());
             }
         }
 
+        if (arguments.contains("base") && arguments.contains("rev")) {
+            System.err.println("error: cannot combine --base and --rev options");
+            System.exit(1);
+        }
+        if (arguments.contains("head") && arguments.contains("rev")) {
+            System.err.println("error: cannot combine --head and --rev options");
+            System.exit(1);
+        }
+        if (arguments.contains("head") && !arguments.contains("base")) {
+            System.err.println("error: cannot use --head without using --base");
+            System.exit(1);
+        }
+
         var rev = arguments.contains("rev") ? resolve(repo, arguments.get("rev").asString()) : null;
-        if (rev == null) {
+        if (rev == null && !(arguments.contains("base") && arguments.contains("head"))) {
             if (isMercurial) {
                 resolve(repo, noOutgoing ? "tip" : "min(outgoing())^");
             } else {
                 if (noOutgoing) {
                     rev = resolve(repo, "HEAD");
@@ -282,10 +305,13 @@
                     }
                 }
             }
         }
 
+        var base = arguments.contains("base") ? resolve(repo, arguments.get("base").asString()) : rev;
+        var head = arguments.contains("head") ? resolve(repo, arguments.get("head").asString()) : null;
+
         var issue = arguments.contains("cr") ? arguments.get("cr").asString() : null;
         if (issue != null) {
             if (issue.startsWith("http")) {
                 var uri = URI.create(issue);
                 issue = Path.of(uri.getPath()).getFileName().toString();
@@ -386,11 +412,11 @@
               .issueLinker(id -> jbs + (isDigit(id.charAt(0)) ? jbsProject + "-" : "") + id)
               .issue(issue)
               .version(version)
               .files(files)
               .similarity(similarity)
-              .generate(rev);
+              .generate(base, head);
     }
 
     private static void apply(String[] args) throws Exception {
         var inputs = List.of(
             Input.position(0)

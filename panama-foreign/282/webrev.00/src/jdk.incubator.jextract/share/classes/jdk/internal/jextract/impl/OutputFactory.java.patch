diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
@@ -358,23 +358,23 @@
         boolean isSegment = clazz == MemorySegment.class;
         MemoryLayout treeLayout = tree.layout().orElseThrow();
         if (parent != null) { //struct field
             MemoryLayout parentLayout = parentLayout(parent);
             if (isSegment) {
-                currentBuilder.addAddressGetter(fieldName, tree.name(), treeLayout, parentLayout);
+                currentBuilder.addSegmentGetter(fieldName, tree.name(), treeLayout, parentLayout);
             } else {
                 currentBuilder.addVarHandleGetter(fieldName, tree.name(), treeLayout, clazz, parentLayout);
                 currentBuilder.addGetter(fieldName, tree.name(), treeLayout, clazz, parentLayout);
                 currentBuilder.addSetter(fieldName, tree.name(), treeLayout, clazz, parentLayout);
             }
         } else {
             if (isSegment) {
-                toplevelBuilder.addAddressGetter(fieldName, tree.name(), treeLayout, null);
+                toplevelBuilder.addSegmentGetter(fieldName, tree.name(), treeLayout, null);
             } else {
                 toplevelBuilder.addLayoutGetter(fieldName, layout);
                 toplevelBuilder.addVarHandleGetter(fieldName, tree.name(), treeLayout, clazz,null);
-                toplevelBuilder.addAddressGetter(fieldName, tree.name(), treeLayout, null);
+                toplevelBuilder.addSegmentGetter(fieldName, tree.name(), treeLayout, null);
                 toplevelBuilder.addGetter(fieldName, tree.name(), treeLayout, clazz, null);
                 toplevelBuilder.addSetter(fieldName, tree.name(), treeLayout, clazz, null);
             }
         }
 

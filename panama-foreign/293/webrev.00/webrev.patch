diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
@@ -237,11 +237,12 @@
 
         return false;
     }
 
     private static boolean isLongDouble(MemoryLayout layout) {
-        return CSupport.C_LONGDOUBLE.equals(layout);
+        return CSupport.C_LONGDOUBLE.bitSize() == 128
+            && CSupport.C_LONGDOUBLE.equals(layout);
     }
 
     private static boolean usesLongDouble(FunctionDescriptor desc) {
         if (isLongDouble(desc.returnLayout().orElse(null))) {
             return true;
diff a/test/jdk/tools/jextract/test8252016/Test8252016.java b/test/jdk/tools/jextract/test8252016/Test8252016.java
--- a/test/jdk/tools/jextract/test8252016/Test8252016.java
+++ b/test/jdk/tools/jextract/test8252016/Test8252016.java
@@ -31,11 +31,11 @@
 
 /*
  * @test
  * @library ..
  * @modules jdk.incubator.jextract
- * @run driver JtregJextract -t test.jextract.vsprintf -- vsprintf.h
+ * @run driver JtregJextract -t test.jextract.vsprintf -l VSPrintf -- vsprintf.h
  * @run testng/othervm -Dforeign.restricted=permit Test8252016
  */
 public class Test8252016 {
     @Test
     public void testsVsprintf() {
@@ -44,11 +44,11 @@
                 b.vargFromInt(C_INT, 12);
                 b.vargFromDouble(C_DOUBLE, 5.5d);
                 b.vargFromLong(C_LONGLONG, -200L);
                 b.vargFromLong(C_LONGLONG, Long.MAX_VALUE);
             })) {
-                vsprintf(s, toCString("%hhd %.2f %lld %lld"), vaList);
+                my_vsprintf(s, toCString("%hhd %.2f %lld %lld"), vaList);
                 String str = toJavaString(s);
                 assertEquals(str, "12 5.50 -200 " + Long.MAX_VALUE);
             }
        }
     }
diff a/test/jdk/tools/jextract/test8252016/libVSPrintf.c b/test/jdk/tools/jextract/test8252016/libVSPrintf.c
--- /dev/null
+++ b/test/jdk/tools/jextract/test8252016/libVSPrintf.c
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+#include "vsprintf.h"
+
+#include <stdio.h>
+#include <stdarg.h>
+
+EXPORT int my_vsprintf(char *s, const char* format, va_list arg) {
+    return vsprintf(s, format, arg);
+}
diff a/test/jdk/tools/jextract/test8252016/vsprintf.h b/test/jdk/tools/jextract/test8252016/vsprintf.h
--- a/test/jdk/tools/jextract/test8252016/vsprintf.h
+++ b/test/jdk/tools/jextract/test8252016/vsprintf.h
@@ -27,6 +27,6 @@
 #define EXPORT
 #endif
 
 #include <stdarg.h>
 
-EXPORT int vsprintf(char *s, const char* format, va_list arg);
+EXPORT int my_vsprintf(char *s, const char* format, va_list arg);

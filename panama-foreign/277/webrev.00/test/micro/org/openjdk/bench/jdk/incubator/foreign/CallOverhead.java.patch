diff a/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java b/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java
--- a/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java
+++ b/test/micro/org/openjdk/bench/jdk/incubator/foreign/CallOverhead.java
@@ -50,11 +50,11 @@
 @BenchmarkMode(Mode.AverageTime)
 @Warmup(iterations = 5, time = 500, timeUnit = TimeUnit.MILLISECONDS)
 @Measurement(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)
 @State(org.openjdk.jmh.annotations.Scope.Thread)
 @OutputTimeUnit(TimeUnit.NANOSECONDS)
-@Fork(3)
+@Fork(value = 3, jvmArgsAppend = { "--add-modules=jdk.incubator.foreign", "-Dforeign.restricted=permit" })
 public class CallOverhead {
 
     static final ForeignLinker abi = CSupport.getSystemLinker();
     static final MethodHandle func;
     static final MethodHandle identity;
@@ -120,16 +120,10 @@
     @Benchmark
     public void panama_blank() throws Throwable {
         func.invokeExact();
     }
 
-    @Benchmark
-    @Fork(jvmArgsAppend = "-Djdk.internal.foreign.ProgrammableInvoker.NO_SPEC=true")
-    public void panama_blank_NO_SPEC() throws Throwable {
-        func.invokeExact();
-    }
-
     @Benchmark
     public void panama_blank_trivial() throws Throwable {
         func_trivial.invokeExact();
     }
 
@@ -141,62 +135,31 @@
     @Benchmark
     public int panama_identity() throws Throwable {
         return (int) identity.invokeExact(10);
     }
 
-    @Benchmark
-    @Fork(jvmArgsAppend = "-Djdk.internal.foreign.ProgrammableInvoker.NO_SPEC=true")
-    public int panama_identity_NO_SPEC() throws Throwable {
-        return (int) identity.invokeExact(10);
-    }
-
     @Benchmark
     public int panama_identity_trivial() throws Throwable {
         return (int) identity_trivial.invokeExact(10);
     }
 
     @Benchmark
     public MemorySegment panama_identity_struct() throws Throwable {
         return (MemorySegment) identity_struct.invokeExact(point);
     }
 
-    @Benchmark
-    @Fork(jvmArgsAppend = "-Djdk.internal.foreign.ProgrammableInvoker.NO_SPEC=true")
-    public MemorySegment panama_identity_struct_NO_SPEC() throws Throwable {
-        return (MemorySegment) identity_struct.invokeExact(point);
-    }
-
     @Benchmark
     public MemoryAddress panama_identity_memory_address() throws Throwable {
         return (MemoryAddress) identity_memory_address.invokeExact(MemoryAddress.NULL);
     }
 
-    @Benchmark
-    @Fork(jvmArgsAppend = "-Djdk.internal.foreign.ProgrammableInvoker.NO_SPEC=true")
-    public MemoryAddress panama_identity_memory_address_NO_SPEC() throws Throwable {
-        return (MemoryAddress) identity_memory_address.invokeExact(MemoryAddress.NULL);
-    }
-
     @Benchmark
     public void panama_args5() throws Throwable {
         args5.invokeExact(10L, 11D, 12L, 13D, 14L);
     }
 
-    @Benchmark
-    @Fork(jvmArgsAppend = "-Djdk.internal.foreign.ProgrammableInvoker.NO_SPEC=true")
-    public void panama_args5_NO_SPEC() throws Throwable {
-        args5.invokeExact(10L, 11D, 12L, 13D, 14L);
-    }
-
     @Benchmark
     public void panama_args10() throws Throwable {
         args10.invokeExact(10L, 11D, 12L, 13D, 14L,
                            15D, 16L, 17D, 18L, 19D);
     }
-
-    @Benchmark
-    @Fork(jvmArgsAppend = "-Djdk.internal.foreign.ProgrammableInvoker.NO_SPEC=true")
-    public void panama_args10_NO_SPEC() throws Throwable {
-        args10.invokeExact(10L, 11D, 12L, 13D, 14L,
-                           15D, 16L, 17D, 18L, 19D);
-    }
 }

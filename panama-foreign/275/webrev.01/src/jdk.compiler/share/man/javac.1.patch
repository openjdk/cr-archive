diff a/src/jdk.compiler/share/man/javac.1 b/src/jdk.compiler/share/man/javac.1
--- a/src/jdk.compiler/share/man/javac.1
+++ b/src/jdk.compiler/share/man/javac.1
@@ -1,6 +1,6 @@
-.\" Copyright (c) 1994, 2019, Oracle and/or its affiliates. All rights reserved.
+.\" Copyright (c) 1994, 2020, Oracle and/or its affiliates. All rights reserved.
 .\" DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 .\"
 .\" This code is free software; you can redistribute it and/or modify it
 .\" under the terms of the GNU General Public License version 2 only, as
 .\" published by the Free Software Foundation.
@@ -19,11 +19,11 @@
 .\" or visit www.oracle.com if you need additional information or have any
 .\" questions.
 .\"
 .\" Automatically generated by Pandoc 2.3.1
 .\"
-.TH "JAVAC" "1" "2020" "JDK 14" "JDK Commands"
+.TH "JAVAC" "1" "2020" "JDK 15" "JDK Commands"
 .hy
 .SH NAME
 .PP
 javac \- read Java declarations and compile them into class files
 .SH SYNOPSIS
@@ -1025,11 +1025,11 @@
 Note that the following lists have no line\-continuation characters.
 .RS
 .PP
 Create a file named \f[CB]options\f[R] that contains the following:
 .PP
-\f[B]Oracle Solaris, Linux, and macOS:\f[R]
+\f[B]Linux and macOS:\f[R]
 .IP
 .nf
 \f[CB]
 \-d\ classes
 \-g
@@ -1272,11 +1272,11 @@
 .PP
 This example compiles the \f[CB]Aloha.java\f[R], \f[CB]GutenTag.java\f[R],
 \f[CB]Hello.java\f[R], and \f[CB]Hi.java\f[R] source files in the
 \f[CB]greetings\f[R] package.
 .PP
-\f[B]Oracle Solaris, Linux, and macOS:\f[R]
+\f[B]Linux and macOS:\f[R]
 .IP
 .nf
 \f[CB]
 %\ javac\ greetings/*.java
 %\ ls\ greetings
@@ -1298,11 +1298,11 @@
 .SS Example of Specifying a User Class Path
 .PP
 After changing one of the source files in the previous example,
 recompile it:
 .PP
-\f[B]Oracle Solaris, Linux, and macOS:\f[R]
+\f[B]Linux and macOS:\f[R]
 .IP
 .nf
 \f[CB]
 pwd
 /examples
@@ -1328,11 +1328,11 @@
 If you want to recompile this file without concern for which directory
 you are in, then add the examples directory to the user class path by
 setting \f[CB]CLASSPATH\f[R].
 This example uses the \f[CB]\-classpath\f[R] option.
 .PP
-\f[B]Oracle Solaris, Linux, and macOS:\f[R]
+\f[B]Linux and macOS:\f[R]
 .RS
 .PP
 \f[CB]javac\ \-classpath\ /examples\ /examples/greetings/Hi.java\f[R]
 .RE
 .PP
@@ -1343,11 +1343,11 @@
 .RE
 .PP
 If you change \f[CB]greetings.Hi\f[R] to use a banner utility, then that
 utility also needs to be accessible through the user class path.
 .PP
-\f[B]Oracle Solaris, Linux, and macOS:\f[R]
+\f[B]Linux and macOS:\f[R]
 .IP
 .nf
 \f[CB]
 javac\ \-classpath\ /examples:/lib/Banners.jar\ \\
 \ \ \ \ \ \ \ \ \ \ \ \ /examples/greetings/Hi.java
@@ -1365,11 +1365,11 @@
 .PP
 To execute a class in the \f[CB]greetings\f[R] package, the program needs
 access to the \f[CB]greetings\f[R] package, and to the classes that the
 \f[CB]greetings\f[R] classes use.
 .PP
-\f[B]Oracle Solaris, Linux, and macOS:\f[R]
+\f[B]Linux and macOS:\f[R]
 .RS
 .PP
 \f[CB]java\ \-classpath\ /examples:/lib/Banners.jar\ greetings.Hi\f[R]
 .RE
 .PP
@@ -1569,11 +1569,11 @@
 hierarchy\f[R], a \f[I]module hierarchy\f[R], and a \f[I]module source
 hierarchy\f[R].
 .PP
 While \f[CB]javac\f[R] is fairly relaxed about the organization of source
 code, beyond the expectation that source will be organized in one or
-package hierarchies, and can generally accomodate organizations
+package hierarchies, and can generally accommodate organizations
 prescribed by development environments and build tools, Java tools in
 general, and \f[CB]javac\f[R] and the Java launcher in particular, are
 more stringent regarding the organization of compiled class files, and
 will be organized in package hierarchies or module hierarchies, as
 appropriate.
@@ -2103,11 +2103,11 @@
 Such warnings cannot be suppressed with the \f[CB]\@SuppressWarnings\f[R]
 annotation.
 For example:
 .RS
 .IP \[bu] 2
-\f[B]Oracle Solaris, Linux, and macOS:\f[R]
+\f[B]Linux and macOS:\f[R]
 \f[CB]javac\ \-Xlint:path\ \-classpath\ /nonexistentpath\ Example.java\f[R]
 .IP \[bu] 2
 \f[B]Windows:\f[R]
 \f[CB]javac\ \-Xlint:path\ \-classpath\ C:\\nonexistentpath\ Example.java\f[R]
 .RE

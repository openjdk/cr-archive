diff a/src/hotspot/share/compiler/compileTask.hpp b/src/hotspot/share/compiler/compileTask.hpp
--- a/src/hotspot/share/compiler/compileTask.hpp
+++ b/src/hotspot/share/compiler/compileTask.hpp
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 1998, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1998, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
@@ -40,19 +40,16 @@
   friend class VMStructs;
   friend class JVMCIVMStructs;
 
  public:
   // Different reasons for a compilation
-  // The order is important - Reason_Whitebox and higher can not become
-  // stale, see CompileTask::can_become_stale()
-  // Also mapped to reason_names[]
+  // The order is important - mapped to reason_names[]
   enum CompileReason {
       Reason_None,
       Reason_InvocationCount,  // Simple/StackWalk-policy
       Reason_BackedgeCount,    // Simple/StackWalk-policy
       Reason_Tiered,           // Tiered-policy
-      Reason_CTW,              // Compile the world
       Reason_Replay,           // ciReplay
       Reason_Whitebox,         // Whitebox API
       Reason_MustBeCompiled,   // Used for -Xcomp or AlwaysCompileLoopMethods (see CompilationPolicy::must_be_compiled())
       Reason_Bootstrap,        // JVMCI bootstrap
       Reason_Count
@@ -62,11 +59,10 @@
     static const char* reason_names[] = {
       "no_reason",
       "count",
       "backedge_count",
       "tiered",
-      "CTW",
       "replay",
       "whitebox",
       "must_be_compiled",
       "bootstrap"
     };
@@ -135,11 +131,10 @@
   }
 #if INCLUDE_JVMCI
   bool         should_wait_for_compilation() const {
     // Wait for blocking compilation to finish.
     switch (_compile_reason) {
-        case Reason_CTW:
         case Reason_Replay:
         case Reason_Whitebox:
         case Reason_Bootstrap:
           return _is_blocking;
         default:

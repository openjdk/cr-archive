diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/TypeMaker.java
@@ -232,10 +232,18 @@
         @Override
         public Type visitArray(Type.Array t, Void aVoid) {
             return Type.pointer(t.elementType());
         }
 
+        @Override
+        public Type visitDelegated(Type.Delegated t, Void aVoid) {
+            if (t.kind() == Delegated.Kind.TYPEDEF && t.type() instanceof Type.Array) {
+                return visitArray((Type.Array)t.type(), aVoid);
+            }
+            return visitType(t, aVoid);
+        }
+
         @Override
         public Type visitType(Type t, Void aVoid) {
             return t;
         }
     };
diff a/test/jdk/tools/jextract/test8252121/Test8252121.java b/test/jdk/tools/jextract/test8252121/Test8252121.java
--- /dev/null
+++ b/test/jdk/tools/jextract/test8252121/Test8252121.java
@@ -0,0 +1,52 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+import org.testng.annotations.Test;
+
+import java.util.stream.IntStream;
+import jdk.incubator.foreign.CSupport;
+import jdk.incubator.foreign.MemorySegment;
+import jdk.incubator.foreign.NativeScope;
+import static org.testng.Assert.assertEquals;
+import static test.jextract.arrayparam.arrayparam_h.*;
+
+/*
+ * @test
+ * @bug 8252121
+ * @summary jextract generated code fails with ABI for typedefed array type parameters
+ * @library ..
+ * @modules jdk.incubator.jextract
+ * @run driver JtregJextract -t test.jextract.arrayparam -l Arrayparam -- arrayparam.h
+ * @run testng/othervm -Dforeign.restricted=permit Test8252121
+ */
+public class Test8252121 {
+    @Test
+    public void test() {
+        try (NativeScope scope = NativeScope.unboundedScope()) {
+            int[] array = { 3, 5, 89, 34, -33 };
+            MemorySegment seg = scope.allocateArray(CSupport.C_INT, array);
+            assertEquals(IntStream.of(array).sum(), sum(seg));
+            assertEquals(IntStream.of(array).reduce(1, (a,b) -> a*b), mul(seg));
+        }
+    }
+}
diff a/test/jdk/tools/jextract/test8252121/arrayparam.h b/test/jdk/tools/jextract/test8252121/arrayparam.h
--- /dev/null
+++ b/test/jdk/tools/jextract/test8252121/arrayparam.h
@@ -0,0 +1,36 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+#ifdef _WIN64
+#define EXPORT __declspec(dllexport)
+#else
+#define EXPORT
+#endif
+
+#define NUM_ELEMENTS 5
+typedef int Array[NUM_ELEMENTS];
+
+typedef Array MyArray;
+
+EXPORT int sum(Array a);
+EXPORT int mul(MyArray a);
diff a/test/jdk/tools/jextract/test8252121/libArrayparam.c b/test/jdk/tools/jextract/test8252121/libArrayparam.c
--- /dev/null
+++ b/test/jdk/tools/jextract/test8252121/libArrayparam.c
@@ -0,0 +1,40 @@
+/*
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
+ *
+ * This code is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License version 2 only, as
+ * published by the Free Software Foundation.
+ *
+ * This code is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+ * version 2 for more details (a copy is included in the LICENSE file that
+ * accompanied this code).
+ *
+ * You should have received a copy of the GNU General Public License version
+ * 2 along with this work; if not, write to the Free Software Foundation,
+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
+ * or visit www.oracle.com if you need additional information or have any
+ * questions.
+ */
+
+#include "arrayparam.h"
+
+int sum(Array a) {
+    int res = 0;
+    for (int i = 0; i < NUM_ELEMENTS; i++) {
+        res += a[i];
+    }
+    return res;
+}
+
+int mul(MyArray a) {
+    int res = 1;
+    for (int i = 0; i < NUM_ELEMENTS; i++) {
+        res *= a[i];
+    }
+    return res;
+}

diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/StructBuilder.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/StructBuilder.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/StructBuilder.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/StructBuilder.java
@@ -96,10 +96,29 @@
         emitAllocateArray();
         emitScopeAllocateArray();
         return super.classEnd();
     }
 
+    private String getQualifiedName(String fieldName) {
+        return className + "$" + fieldName;
+    }
+
+    @Override
+    void addVarHandleGetter(String javaName, String nativeName, MemoryLayout layout, Class<?> type, MemoryLayout parentLayout) {
+        var desc = constantHelper.addVarHandle(getQualifiedName(javaName), nativeName, layout, type, parentLayout);
+        incrAlign();
+        indent();
+        append(PUB_MODS + displayName(desc.invocationType().returnType()) + " " + javaName + "$VH() {\n");
+        incrAlign();
+        indent();
+        append("return " + getCallString(desc) + ";\n");
+        decrAlign();
+        indent();
+        append("}\n");
+        decrAlign();
+    }
+
     @Override
     void addLayoutGetter(String javaName, MemoryLayout layout) {
         var desc = constantHelper.addLayout(javaName + "$struct", layout);
         incrAlign();
         indent();
@@ -119,11 +138,11 @@
         indent();
         append(PUB_MODS + type.getName() + " " + javaName + "$get(MemorySegment seg) {\n");
         incrAlign();
         indent();
         append("return (" + type.getName() + ")"
-                + varHandleGetCallString(javaName, nativeName, layout, type, parentLayout) + ".get(seg);\n");
+                + varHandleGetCallString(getQualifiedName(javaName), nativeName, layout, type, parentLayout) + ".get(seg);\n");
         decrAlign();
         indent();
         append("}\n");
         decrAlign();
 
@@ -136,11 +155,11 @@
         indent();
         String param = MemorySegment.class.getName() + " seg";
         append(PUB_MODS + "void " + javaName + "$set(" + param + ", " + type.getName() + " x) {\n");
         incrAlign();
         indent();
-        append(varHandleGetCallString(javaName, nativeName, layout, type, null) + ".set(seg, x);\n");
+        append(varHandleGetCallString(getQualifiedName(javaName), nativeName, layout, type, null) + ".set(seg, x);\n");
         decrAlign();
         indent();
         append("}\n");
         decrAlign();
 
@@ -221,11 +240,12 @@
         String params = MemorySegment.class.getName() + " addr, long index";
         append(PUB_MODS + type.getName() + " " + javaName + "$get(" + params + ") {\n");
         incrAlign();
         indent();
         append("return (" + type.getName() + ")"
-                + varHandleGetCallString(javaName, nativeName, layout, type, parentLayout) + ".get(addr.asSlice(index*sizeof()));\n");
+                + varHandleGetCallString(getQualifiedName(javaName), nativeName, layout, type, parentLayout) +
+                ".get(addr.asSlice(index*sizeof()));\n");
         decrAlign();
         indent();
         append("}\n");
         decrAlign();
     }
@@ -235,11 +255,12 @@
         indent();
         String params = MemorySegment.class.getName() + " addr, long index, " + type.getName() + " x";
         append(PUB_MODS + "void " + javaName + "$set(" + params + ") {\n");
         incrAlign();
         indent();
-        append(varHandleGetCallString(javaName, nativeName, layout, type, parentLayout) + ".set(addr.asSlice(index*sizeof()), x);\n");
+        append(varHandleGetCallString(getQualifiedName(javaName), nativeName, layout, type, parentLayout) +
+                ".set(addr.asSlice(index*sizeof()), x);\n");
         decrAlign();
         indent();
         append("}\n");
         decrAlign();
     }

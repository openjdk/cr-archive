diff a/src/hotspot/cpu/x86/sharedRuntime_x86_64.cpp b/src/hotspot/cpu/x86/sharedRuntime_x86_64.cpp
--- a/src/hotspot/cpu/x86/sharedRuntime_x86_64.cpp
+++ b/src/hotspot/cpu/x86/sharedRuntime_x86_64.cpp
@@ -3764,19 +3764,20 @@
   assert(!(target_uses_register(r15_thread->as_VMReg()) || target_uses_register(rscratch1->as_VMReg())), "Register conflict");
 
   MacroAssembler* masm = _masm;
   __ enter();
 
-  Address java_pc(r15_thread,
-                  JavaThread::frame_anchor_offset() + JavaFrameAnchor::last_Java_pc_offset());
+  Address java_pc(r15_thread, JavaThread::last_Java_pc_offset());
   __ movptr(rscratch1, Address(rsp, 8)); // read return address from stack
   __ movptr(java_pc, rscratch1);
 
   __ movptr(rscratch1, rsp);
-  __ addptr(rscratch1, 16);
+  __ addptr(rscratch1, 16); // skip return and frame
   __ movptr(Address(r15_thread, JavaThread::last_Java_sp_offset()), rscratch1);
 
+  __ movptr(Address(r15_thread, JavaThread::saved_rbp_address_offset()), rsp); // rsp points at saved RBP
+
     // State transition
   __ movl(Address(r15_thread, JavaThread::thread_state_offset()), _thread_in_native);
 
   if (_shadow_space_bytes != 0) {
     // needed here for correct stack args offset on Windows

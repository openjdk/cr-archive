diff a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
--- a/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
+++ b/src/jdk.incubator.jextract/share/classes/jdk/internal/jextract/impl/OutputFactory.java
@@ -236,18 +236,21 @@
         }
 
         return false;
     }
 
+    private static boolean isLongDouble(MemoryLayout layout) {
+        return CSupport.C_LONGDOUBLE.equals(layout);
+    }
+
     private static boolean usesLongDouble(FunctionDescriptor desc) {
-        if (!desc.returnLayout().isEmpty()) {
-            if (desc.returnLayout().get().equals(CSupport.C_LONGDOUBLE)) {
-                return true;
-            }
+        if (isLongDouble(desc.returnLayout().orElse(null))) {
+            return true;
         }
+
         for (MemoryLayout argLayout : desc.argumentLayouts()) {
-            if (argLayout.equals(CSupport.C_LONGDOUBLE)) {
+            if (isLongDouble(argLayout)) {
                 return true;
             }
         }
         return false;
     }
@@ -390,11 +393,11 @@
         MemoryLayout layout = tree.layout().orElse(Type.layoutFor(type).orElse(null));
         if (layout == null) {
             //no layout - abort
             return null;
         }
-        if (layout.equals(CSupport.C_LONGDOUBLE)) {
+        if (isLongDouble(layout)) {
             warn("skipping " + fieldName + " because of long double usage");
         }
 
         Class<?> clazz = typeTranslator.getJavaType(type);
         if (tree.kind() == Declaration.Variable.Kind.BITFIELD ||

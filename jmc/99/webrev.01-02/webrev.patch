diff a/agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentControllerMXBean.java b/agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentControllerMXBean.java
--- a/agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentControllerMXBean.java
+++ b/agent/src/main/java/org/openjdk/jmc/agent/jmx/AgentControllerMXBean.java
@@ -34,10 +34,18 @@
 
 import org.openjdk.jmc.agent.jfr.JFRTransformDescriptor;
 
 public interface AgentControllerMXBean {
 
+	/**
+	 * Reverts all existing instrumentation and then defines a new set of event probes to transform.
+	 *
+	 * @param xmlDescription
+	 *           the XML snippet describing event probes to transform.
+	 * @throws Exception
+	 *           thrown when an event probe's specified class can not be retransformed.
+	 */
 	public void defineEventProbes(String xmlDescription) throws Exception;
 
 	/**
 	 * Returns the most recent XML configuration that was successfully applied.
 	 *
diff a/agent/src/test/java/org/openjdk/jmc/agent/test/TestRetrieveEventProbes.java b/agent/src/test/java/org/openjdk/jmc/agent/test/TestRetrieveEventProbes.java
--- a/agent/src/test/java/org/openjdk/jmc/agent/test/TestRetrieveEventProbes.java
+++ b/agent/src/test/java/org/openjdk/jmc/agent/test/TestRetrieveEventProbes.java
@@ -65,14 +65,24 @@
 	@Test
 	public void testRetrieveEventProbes() throws Exception {
 		AgentControllerMXBean mbean = JMX.newMXBeanProxy(ManagementFactory.getPlatformMBeanServer(),
 				new ObjectName(AGENT_OBJECT_NAME), AgentControllerMXBean.class, false);
 
-		Assert.assertTrue(mbean.retrieveEventProbes().isEmpty());
+		Assert.assertNotEquals(mbean.retrieveEventProbes(), XML_TEST_DESCRIPTION);
 		mbean.defineEventProbes(XML_TEST_DESCRIPTION);
-		String currentConfiguration = mbean.retrieveEventProbes();
-		Assert.assertEquals(XML_TEST_DESCRIPTION, currentConfiguration);
+		Assert.assertEquals(mbean.retrieveEventProbes(), XML_TEST_DESCRIPTION);
+	}
+
+	@Test
+	public void testRetrieveInvalidConfiguration() throws Exception {
+		AgentControllerMXBean mbean = JMX.newMXBeanProxy(ManagementFactory.getPlatformMBeanServer(),
+				new ObjectName(AGENT_OBJECT_NAME), AgentControllerMXBean.class, false);
+
+		String initialConfiguration = mbean.retrieveEventProbes();
+		String invalidConfiguration = XML_TEST_DESCRIPTION.concat("</jfragent>");
+		mbean.defineEventProbes(invalidConfiguration);
+		Assert.assertEquals(mbean.retrieveEventProbes(), initialConfiguration);
 	}
 
 	public void test() {
 		//Dummy method for instrumentation
 	}

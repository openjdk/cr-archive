diff a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/memory/StringDeduplicationRule.java b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/memory/StringDeduplicationRule.java
--- a/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/memory/StringDeduplicationRule.java
+++ b/core/org.openjdk.jmc.flightrecorder.rules.jdk/src/main/java/org/openjdk/jmc/flightrecorder/rules/jdk/memory/StringDeduplicationRule.java
@@ -105,11 +105,11 @@
 	// FIXME: Does it make more sense to have individual liveset/allocation ratio limit and heap usage limits?
 	// FIXME: Add a physical memory limit
 
 	public StringDeduplicationRule() {
 		super("StringDeduplication", Messages.getString(Messages.StringDeduplicationRule_RULE_NAME), //$NON-NLS-1$
-				JfrRuleTopics.HEAP_TOPIC, STRING_ARRAY_LIVESET_RATIO_AND_HEAP_USAGE_LIMIT,
+				JfrRuleTopics.HEAP, STRING_ARRAY_LIVESET_RATIO_AND_HEAP_USAGE_LIMIT,
 				STRING_ARRAY_ALLOCATION_RATIO_AND_HEAP_USAGE_LIMIT, STRING_ARRAY_ALLOCATION_FRAMES);
 	}
 
 	@Override
 	protected Result getResult(IItemCollection items, IPreferenceValueProvider vp) {

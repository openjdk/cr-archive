diff a/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/TimeFilter.java b/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/TimeFilter.java
--- a/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/TimeFilter.java
+++ b/application/org.openjdk.jmc.ui/src/main/java/org/openjdk/jmc/ui/misc/TimeFilter.java
@@ -1,8 +1,8 @@
 /*
- * Copyright (c) 2019, Oracle and/or its affiliates. All rights reserved.
- * Copyright (c) 2019, Red Hat Inc. All rights reserved.
+ * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2020, Red Hat Inc. All rights reserved.
  *
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * The contents of this file are subject to the terms of either the Universal Permissive License
  * v 1.0 as shown at http://oss.oracle.com/licenses/upl
@@ -73,29 +73,25 @@
 	private TimeDisplay startDisplay;
 	private TimeDisplay endDisplay;
 
 	public TimeFilter(Composite parent, IRange<IQuantity> recordingRange, Listener resetListener) {
 		super(parent, SWT.NONE);
-		this.setBackground(Palette.getThreadsPageBackgroundColor());
 		this.setLayout(new GridLayout(7, false));
 
 		inspectRecordingRange(recordingRange);
 
 		Label eventsLabel = new Label(this, SWT.LEFT);
 		eventsLabel.setText(Messages.TimeFilter_FILTER_EVENTS);
 		eventsLabel.setFont(JFaceResources.getFontRegistry().get(JFaceResources.BANNER_FONT));
-		eventsLabel.setBackground(Palette.getThreadsPageBackgroundColor());
 
 		Label fromLabel = new Label(this, SWT.CENTER);
 		fromLabel.setText(Messages.TimeFilter_FROM);
-		fromLabel.setBackground(Palette.getThreadsPageBackgroundColor());
 
 		startDisplay = new TimeDisplay(this, FilterType.START, recordingRange.getStart());
 
 		Label toLabel = new Label(this, SWT.CENTER);
 		toLabel.setText(Messages.TimeFilter_TO);
-		toLabel.setBackground(Palette.getThreadsPageBackgroundColor());
 
 		endDisplay = new TimeDisplay(this, FilterType.END, recordingRange.getEnd());
 
 		Button resetBtn = new Button(this, SWT.PUSH);
 		resetBtn.setLayoutData(new GridData(SWT.LEFT, SWT.CENTER, false, false));
@@ -156,11 +152,10 @@
 
 		public TimeDisplay(TimeFilter parent, FilterType type, IQuantity defaultTime) {
 			super(parent, SWT.NONE);
 			this.type = type;
 			this.defaultTime = defaultTime;
-			this.setBackground(Palette.getThreadsPageBackgroundColor());
 			this.setLayout(new GridLayout());
 			timeText = new Text(this, SWT.SEARCH | SWT.SINGLE);
 			// if the recording spans multiple days, include the date in the time display
 			if (!isMultiDayRecording) {
 				timeText.setTextLimit(12);

diff a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCChartCanvas.java b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCChartCanvas.java
--- a/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCChartCanvas.java
+++ b/application/uitests/org.openjdk.jmc.test.jemmy/src/test/java/org/openjdk/jmc/test/jemmy/misc/wrappers/MCChartCanvas.java
@@ -1,8 +1,8 @@
 /*
- * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
- * Copyright (c) 2019, Red Hat Inc. All rights reserved.
+ * Copyright (c) 2018, 2020, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2019, 2020, Red Hat Inc. All rights reserved.
  *
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * The contents of this file are subject to the terms of either the Universal Permissive License
  * v 1.0 as shown at http://oss.oracle.com/licenses/upl
@@ -42,10 +42,12 @@
 import org.openjdk.jmc.test.jemmy.misc.fetchers.Fetcher;
 import org.openjdk.jmc.ui.misc.ChartCanvas;
 import org.jemmy.Point;
 import org.jemmy.control.Wrap;
 import org.jemmy.input.StringPopupOwner;
+import org.jemmy.interfaces.Keyboard.KeyboardButtons;
+import org.jemmy.interfaces.Mouse.MouseButtons;
 import org.jemmy.interfaces.Parent;
 import org.jemmy.resources.StringComparePolicy;
 
 /**
  * The Jemmy wrapper for the Mission Control Chart Canvas.
@@ -107,10 +109,35 @@
 		StringPopupOwner<Shell> contextMenu = control.as(StringPopupOwner.class);
 		contextMenu.setPolicy(StringComparePolicy.SUBSTRING);
 		contextMenu.push(getRelativeClickPoint(), new String[] {menuItemText});
 	}
 
+	/**
+	 * Click the center of the chart in the ChartCanvas
+	 */
+	public void clickChart() {
+		Display.getDefault().syncExec(() -> {
+			control.mouse().click(1, getRelativeClickPoint(), MouseButtons.BUTTON1);
+		});
+	}
+
+	/**
+	 * Zoom in the chart with keyboard controls
+	 */
+	public void keyboardZoomIn() {
+		control.keyboard().pushKey(KeyboardButtons.UP);
+		waitForIdle();
+	}
+
+	/**
+	 * Zoom out the chart with keyboard controls
+	 */
+	public void keyboardZoomOut() {
+		control.keyboard().pushKey(KeyboardButtons.DOWN);
+		waitForIdle();
+	}
+
 	/**
 	 * Checks the isEnabled value for a menu item in the context menu
 	 *
 	 * @param menuItemText
 	 *            the menu item of interest
@@ -127,11 +154,12 @@
 	 */
 	private Point getRelativeClickPoint() {
 		Fetcher<Point> fetcher = new Fetcher<Point>() {
 			@Override
 			public void run() {
-				setOutput(new Point(control.getScreenBounds().x / 2, control.getScreenBounds().y / 2));
+				setOutput(new Point(control.getControl().getParent().getSize().x / 2,
+						control.getControl().getParent().getSize().y / 2));
 			}
 		};
 		Display.getDefault().syncExec(fetcher);
 		return fetcher.getOutput();
 	}

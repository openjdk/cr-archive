diff a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java
--- a/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java
+++ b/modules/javafx.controls/src/main/java/com/sun/javafx/scene/control/behavior/ListViewBehavior.java
@@ -74,18 +74,12 @@
     public ListViewBehavior(ListView<T> control) {
         super(control);
 
         // create a map for listView-specific mappings
         listViewInputMap = createInputMap();
-
         // add focus traversal mappings
-        addDefaultMapping(listViewInputMap, FocusTraversalInputMap.getFocusTraversalMappings());
         addDefaultMapping(listViewInputMap,
-            new KeyMapping(HOME, e -> selectFirstRow()),
-            new KeyMapping(END, e -> selectLastRow()),
-            new KeyMapping(new KeyBinding(HOME).shift(), e -> selectAllToFirstRow()),
-            new KeyMapping(new KeyBinding(END).shift(), e -> selectAllToLastRow()),
             new KeyMapping(new KeyBinding(PAGE_UP).shift(), e -> selectAllPageUp()),
             new KeyMapping(new KeyBinding(PAGE_DOWN).shift(), e -> selectAllPageDown()),
 
             new KeyMapping(new KeyBinding(SPACE).shift(), e -> selectAllToFocus(false)),
             new KeyMapping(new KeyBinding(SPACE).shortcut().shift(), e -> selectAllToFocus(true)),
@@ -96,13 +90,10 @@
             new KeyMapping(ENTER, e -> activate()),
             new KeyMapping(SPACE, e -> activate()),
             new KeyMapping(F2, e -> activate()),
             new KeyMapping(ESCAPE, e -> cancelEdit()),
 
-            new KeyMapping(new KeyBinding(A).shortcut(), e -> selectAll()),
-            new KeyMapping(new KeyBinding(HOME).shortcut(), e -> focusFirstRow()),
-            new KeyMapping(new KeyBinding(END).shortcut(), e -> focusLastRow()),
             new KeyMapping(new KeyBinding(PAGE_UP).shortcut(), e -> focusPageUp()),
             new KeyMapping(new KeyBinding(PAGE_DOWN).shortcut(), e -> focusPageDown()),
 
             new KeyMapping(new KeyBinding(BACK_SLASH).shortcut(), e -> clearSelection()),
 
@@ -142,15 +133,31 @@
             new KeyMapping(new KeyBinding(DOWN).shortcut(), e -> focusNextRow()),
 
             new KeyMapping(new KeyBinding(UP).shortcut().shift(), e -> discontinuousSelectPreviousRow()),
             new KeyMapping(new KeyBinding(DOWN).shortcut().shift(), e -> discontinuousSelectNextRow()),
             new KeyMapping(new KeyBinding(PAGE_UP).shortcut().shift(), e -> discontinuousSelectPageUp()),
-            new KeyMapping(new KeyBinding(PAGE_DOWN).shortcut().shift(), e -> discontinuousSelectPageDown()),
-            new KeyMapping(new KeyBinding(HOME).shortcut().shift(), e -> discontinuousSelectAllToFirstRow()),
-            new KeyMapping(new KeyBinding(END).shortcut().shift(), e -> discontinuousSelectAllToLastRow())
+            new KeyMapping(new KeyBinding(PAGE_DOWN).shortcut().shift(), e -> discontinuousSelectPageDown())
         );
 
+        if (!Boolean.TRUE.equals(control.getProperties().containsKey("excludeKeyMappingsForComboBoxEditor"))) {
+            addDefaultMapping(listViewInputMap, FocusTraversalInputMap.getFocusTraversalMappings());
+            addDefaultMapping(listViewInputMap,
+                    new KeyMapping(HOME, e -> selectFirstRow()),
+                    new KeyMapping(END, e -> selectLastRow()),
+                    new KeyMapping(new KeyBinding(HOME).shift(), e -> selectAllToFirstRow()),
+                    new KeyMapping(new KeyBinding(END).shift(), e -> selectAllToLastRow()),
+                    new KeyMapping(new KeyBinding(HOME).shortcut(), e -> focusFirstRow()),
+                    new KeyMapping(new KeyBinding(END).shortcut(), e -> focusLastRow()),
+                    new KeyMapping(new KeyBinding(A).shortcut(), e -> selectAll())
+            );
+
+            addDefaultMapping(verticalListInputMap,
+                    new KeyMapping(new KeyBinding(HOME).shortcut().shift(), e -> discontinuousSelectAllToFirstRow()),
+                    new KeyMapping(new KeyBinding(END).shortcut().shift(), e -> discontinuousSelectAllToLastRow())
+            );
+        }
+
         addDefaultChildMap(listViewInputMap, verticalListInputMap);
 
         // --- horizontal listview
         InputMap<ListView<T>> horizontalListInputMap = new InputMap<>(control);
         horizontalListInputMap.setInterceptor(event -> control.getOrientation() != Orientation.HORIZONTAL);
@@ -196,11 +203,10 @@
             tlFocus = new TwoLevelFocusListBehavior(control); // needs to be last.
         }
     }
 
 
-
     /***************************************************************************
      *                                                                         *
      * Implementation of BehaviorBase API                                      *
      *                                                                         *
      **************************************************************************/

diff a/modules/javafx.graphics/src/main/java/com/sun/javafx/sg/prism/NGPointLight.java b/modules/javafx.graphics/src/main/java/com/sun/javafx/sg/prism/NGPointLight.java
--- a/modules/javafx.graphics/src/main/java/com/sun/javafx/sg/prism/NGPointLight.java
+++ b/modules/javafx.graphics/src/main/java/com/sun/javafx/sg/prism/NGPointLight.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -24,13 +24,95 @@
  */
 
 package com.sun.javafx.sg.prism;
 
 /**
- * TODO: 3D - Need documentation
+ * The peer of the {@code PointLight} class. Holds the default values of {@code PointLight}'s
+ * properties and updates the visuals via {@link NGNode#visualsChanged} when one of the current
+ * values changes. The peer receives its changes by {@code PointLight.doUpdatePeer} calls.
  */
 public class NGPointLight extends NGLightBase {
 
+    /** Constant attenuation factor default value */
+    private static final float DEFAULT_CA = 1;
+    /** Linear attenuation factor default value */
+    private static final float DEFAULT_LA = 0;
+    /** Quadratic attenuation factor default value */
+    private static final float DEFAULT_QA = 0;
+    /** Max range default value */
+    private static final float DEFAULT_MAX_RANGE = Float.POSITIVE_INFINITY;
+
     public NGPointLight() {
     }
 
-}
+    public static float getDefaultCa() {
+        return DEFAULT_CA;
+    }
+
+    public static float getDefaultLa() {
+        return DEFAULT_LA;
+    }
+
+    public static float getDefaultQa() {
+        return DEFAULT_QA;
+    }
+
+    public static float getDefaultMaxRange() {
+        return DEFAULT_MAX_RANGE;
+    }
+
+
+    private float ca = DEFAULT_CA;
+
+    public float getCa() {
+        return ca;
+    }
+
+    public void setCa(float ca) {
+        if (this.ca != ca) {
+            this.ca = ca;
+            visualsChanged();
+        }
+    }
+
+
+    private float la = DEFAULT_LA;
+
+    public float getLa() {
+        return la;
+    }
+
+    public void setLa(float la) {
+        if (this.la != la) {
+            this.la = la;
+            visualsChanged();
+        }
+    }
+
+
+    private float qa = DEFAULT_QA;
+
+    public float getQa() {
+        return qa;
+    }
+
+    public void setQa(float qa) {
+        if (this.qa != qa) {
+            this.qa = qa;
+            visualsChanged();
+        }
+    }
+
+
+    private float maxRange = DEFAULT_MAX_RANGE;
+
+    public float getMaxRange() {
+        return maxRange;
+    }
+
+    public void setMaxRange(float maxRange) {
+        if (this.maxRange != maxRange) {
+            this.maxRange = maxRange < 0 ? 0 : maxRange;
+            visualsChanged();
+        }
+    }
+}

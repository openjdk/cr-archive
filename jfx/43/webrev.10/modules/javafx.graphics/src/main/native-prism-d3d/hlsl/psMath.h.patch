diff a/modules/javafx.graphics/src/main/native-prism-d3d/hlsl/psMath.h b/modules/javafx.graphics/src/main/native-prism-d3d/hlsl/psMath.h
--- a/modules/javafx.graphics/src/main/native-prism-d3d/hlsl/psMath.h
+++ b/modules/javafx.graphics/src/main/native-prism-d3d/hlsl/psMath.h
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2013, 2019, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -61,11 +61,19 @@
 void phong(
     float3 n, float3 e, float power, in float4 L[LocalBump::nLights],
     in out float3 d, in out float3 s, int _s, int _e)
 {
     float3 refl = reflect(e, n);
-    for (int i=_s; i<_e; i++) {
-        float3 l = normalize(L[i].xyz);
-        d += saturate(dot(n,l))*gLightColor[i].xyz;
-        s += pow(saturate(dot(-refl, l)), power)*gLightColor[i].xyz;
+    for (int i = _s; i < _e; i++) {
+        float dist = length(L[i].xyz);
+        if (dist <= gLightRange[i].x) {
+            float ca = gLightAttenuation[i].x;
+            float la = gLightAttenuation[i].y;
+            float qa = gLightAttenuation[i].z;
+            float3 attenuatedColor = gLightColor[i].xyz / (ca + la * dist + qa * dist * dist);
+
+            float3 l = normalize(L[i].xyz);
+            d += saturate(dot(n, l)) * attenuatedColor;
+            s += pow(saturate(dot(-refl, l)), power) * attenuatedColor;
+        }
     }
 }

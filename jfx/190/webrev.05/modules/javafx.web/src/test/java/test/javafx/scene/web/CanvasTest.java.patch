diff a/modules/javafx.web/src/test/java/test/javafx/scene/web/CanvasTest.java b/modules/javafx.web/src/test/java/test/javafx/scene/web/CanvasTest.java
--- a/modules/javafx.web/src/test/java/test/javafx/scene/web/CanvasTest.java
+++ b/modules/javafx.web/src/test/java/test/javafx/scene/web/CanvasTest.java
@@ -1,7 +1,7 @@
 /*
- * Copyright (c) 2015, 2019, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.  Oracle designates this
@@ -123,10 +123,42 @@
             assertEquals("Arc endAngle", redColor,
                     (int) getEngine().executeScript("document.getElementById('canvas').getContext('2d').getImageData(300,75,1,1).data[0]"));
         });
     }
 
+    // JDK-8234471
+    @Test public void testCanvasPattern() throws Exception {
+        final String htmlCanvasContent = "\n"
+            + "<canvas id='canvaspattern' width='100' height='100'></canvas>\n"
+            + "<svg id='svgpattern'></svg>\n"
+            + "<script>\n"
+            + "var patternCanvas = document.createElement('canvas');\n"
+            + "var patternCtx = patternCanvas.getContext('2d');\n"
+            + "patternCanvas.width = patternCanvas.height = 30;\n"
+            + "patternCtx.fillStyle = 'red';\n"
+            + "patternCtx.fillRect(0, 0, 20, 20);\n"
+            + "\n"
+            + "var ctx = document.getElementById('canvaspattern').getContext('2d');\n"
+            + "var pattern = ctx.createPattern(patternCanvas, 'repeat');\n"
+            + "var matrix = document.getElementById('svgpattern').createSVGMatrix();\n"
+            + "pattern.setTransform(matrix.translate(10, 10));\n"
+            + "ctx.fillStyle = pattern;\n"
+            + "ctx.fillRect(0, 0, 100, 100);\n"
+            + "</script>\n";
+
+        loadContent(htmlCanvasContent);
+        submit(() -> {
+            int redColor = 255;
+            assertEquals("Pattern top-left corner", 0, (int) getEngine().executeScript(
+                "document.getElementById('canvaspattern').getContext('2d').getImageData(1, 1, 1, 1).data[0]"));
+            assertEquals("First rect top-left", redColor, (int) getEngine().executeScript(
+                "document.getElementById('canvaspattern').getContext('2d').getImageData(11, 11, 1, 1).data[0]"));
+            assertEquals("First rect center", redColor, (int) getEngine().executeScript(
+                "document.getElementById('canvaspattern').getContext('2d').getImageData(21, 21, 1, 1).data[0]"));
+        });
+    }
+
     private BufferedImage htmlCanvasToBufferedImage(final String mime) throws Exception {
         ByteArrayOutputStream errStream = new ByteArrayOutputStream();
         System.setErr(new PrintStream(errStream));
 
         final String html = String.format(""

diff a/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/StreamInternals.js b/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/StreamInternals.js
--- a/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/StreamInternals.js
+++ b/modules/javafx.web/src/main/native/Source/WebCore/Modules/streams/StreamInternals.js
@@ -34,31 +34,48 @@
     if (promise.@then === @undefined)
         promise.@then = @Promise.prototype.@then;
     return promise;
 }
 
-function promiseInvokeOrNoopNoCatch(object, key, args)
+function promiseInvokeOrNoopMethodNoCatch(object, method, args)
 {
     "use strict";
 
-    const method = object[key];
     if (method === @undefined)
         return @Promise.@resolve();
     return @shieldingPromiseResolve(method.@apply(object, args));
 }
 
+function promiseInvokeOrNoopNoCatch(object, key, args)
+{
+    "use strict";
+
+    return @promiseInvokeOrNoopMethodNoCatch(object, object[key], args);
+}
+
+function promiseInvokeOrNoopMethod(object, method, args)
+{
+    "use strict";
+
+    try {
+        return @promiseInvokeOrNoopMethodNoCatch(object, method, args);
+    }
+    catch(error) {
+        return @Promise.@reject(error);
+    }
+}
+
 function promiseInvokeOrNoop(object, key, args)
 {
     "use strict";
 
     try {
         return @promiseInvokeOrNoopNoCatch(object, key, args);
     }
     catch(error) {
         return @Promise.@reject(error);
     }
-
 }
 
 function promiseInvokeOrFallbackOrNoop(object, key1, args1, key2, args2)
 {
     "use strict";

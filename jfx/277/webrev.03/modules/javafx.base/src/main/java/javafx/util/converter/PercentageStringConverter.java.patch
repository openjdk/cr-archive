diff a/modules/javafx.base/src/main/java/javafx/util/converter/PercentageStringConverter.java b/modules/javafx.base/src/main/java/javafx/util/converter/PercentageStringConverter.java
--- a/modules/javafx.base/src/main/java/javafx/util/converter/PercentageStringConverter.java
+++ b/modules/javafx.base/src/main/java/javafx/util/converter/PercentageStringConverter.java
@@ -28,36 +28,45 @@
 import java.text.NumberFormat;
 import java.util.Locale;
 import javafx.util.StringConverter;
 
 /**
- * <p>{@link StringConverter} implementation for {@link Number} values
- * that represent percentages.</p>
+ * A {@link StringConverter} implementation for {@link Number} values that represent percentages. Instances of this class are
+ * immutable.
  *
  * @see CurrencyStringConverter
  * @see NumberStringConverter
  * @see StringConverter
  * @since JavaFX 2.1
  */
 public class PercentageStringConverter extends NumberStringConverter {
 
-
-    // ------------------------------------------------------------ Constructors
+    /**
+     * Constructs a {@code PercentageStringConverter} with the default locale and format.
+     */
     public PercentageStringConverter() {
         this(Locale.getDefault());
     }
 
+    /**
+     * Constructs a {@code PercentageStringConverter} with the given locale and the default format.
+     *
+     * @param locale the locale used in determining the number format used to format the string
+     */
     public PercentageStringConverter(Locale locale) {
         super(locale, null, null);
     }
 
+    /**
+     * Constructs a {@code PercentageStringConverter} with the given number format.
+     *
+     * @param numberFormat the number format used to format the string
+     */
     public PercentageStringConverter(NumberFormat numberFormat) {
         super(null, null, numberFormat);
     }
 
-    // ----------------------------------------------------------------- Methods
-
     /** {@inheritDoc} */
     @Override public NumberFormat getNumberFormat() {
         Locale _locale = locale == null ? Locale.getDefault() : locale;
 
         if (numberFormat != null) {

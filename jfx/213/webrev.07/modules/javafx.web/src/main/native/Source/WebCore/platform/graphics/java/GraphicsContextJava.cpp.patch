diff a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/GraphicsContextJava.cpp b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/GraphicsContextJava.cpp
--- a/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/GraphicsContextJava.cpp
+++ b/modules/javafx.web/src/main/native/Source/WebCore/platform/graphics/java/GraphicsContextJava.cpp
@@ -50,10 +50,11 @@
 #include "Pattern.h"
 #include "PlatformContextJava.h"
 #include "RenderingQueue.h"
 #include "Font.h"
 #include "TransformationMatrix.h"
+#include "ImageBuffer.h"
 
 #include "com_sun_webkit_graphics_GraphicsDecoder.h"
 #include "com_sun_webkit_graphics_WCPath.h"
 
 
@@ -229,10 +230,11 @@
             FloatPoint(),
             FloatSize(),
             CompositeOperator::Copy);
     } else {
         if (m_state.fillGradient) {
+            setCTM(m_state.transform);
             setGradient(
                 *m_state.fillGradient,
                 platformContext(),
                 com_sun_webkit_graphics_GraphicsDecoder_SET_FILL_GRADIENT);
         }
@@ -253,13 +255,21 @@
     platformContext()->rq().freeSpace(20)
     << (jint)com_sun_webkit_graphics_GraphicsDecoder_SETCLIP_IIII
     << (jint)rect.x() << (jint)rect.y() << (jint)rect.width() << (jint)rect.height();
 }
 
-void GraphicsContext::clipToImageBuffer(ImageBuffer&, const FloatRect&)
+void GraphicsContext::clipToImageBuffer(ImageBuffer& imageBuffer, const FloatRect& rect)
 {
-    notImplemented();
+    if (paintingDisabled())
+        return;
+
+    RefPtr<Image> copiedImage = imageBuffer.copyImage(BackingStoreCopy::CopyBackingStore, PreserveResolution::Yes);
+    NativeImagePtr nativeImageObject = copiedImage->nativeImageForCurrentFrame(this);
+    m_state.clipBounds.intersect(m_state.transform.mapRect(rect));
+    platformContext()->rq().freeSpace(24)
+    << (jint)com_sun_webkit_graphics_GraphicsDecoder_SETCLIP_IIII_MASK
+    << (jint)rect.x() << (jint)rect.y() << (jint)rect.width() << (jint)rect.height() << nativeImageObject;
 }
 
 IntRect GraphicsContext::clipBounds() const
 {
     // Transformation has inverse effect on clip bounds.

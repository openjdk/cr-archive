diff a/src/hotspot/share/opto/subnode.cpp b/src/hotspot/share/opto/subnode.cpp
--- a/src/hotspot/share/opto/subnode.cpp
+++ b/src/hotspot/share/opto/subnode.cpp
@@ -939,14 +939,17 @@
         // If klass0's type is PRECISE, then classes are unrelated.
         unrelated_classes = xklass0;
       } else {                  // Neither subtypes the other
         unrelated_classes = true;
       }
-      if ((r0->flat_array() && (!r1->can_be_inline_type() || (klass1->is_inlinetype() && !klass1->flatten_array()))) ||
-          (r1->flat_array() && (!r0->can_be_inline_type() || (klass0->is_inlinetype() && !klass0->flatten_array())))) {
-        // One type is flattened in arrays and the other type is not. Must be unrelated.
-        unrelated_classes = true;
+      if (!unrelated_classes) {
+        // Handle inline type arrays
+        if ((r0->flatten_array() && (!r1->can_be_inline_type() || (klass1->is_inlinetype() && !klass1->flatten_array()))) ||
+            (r1->flatten_array() && (!r0->can_be_inline_type() || (klass0->is_inlinetype() && !klass0->flatten_array())))) {
+          // One type is flattened in arrays but the other type is not. Must be unrelated.
+          unrelated_classes = true;
+        }
       }
       if (unrelated_classes) {
         // The oops classes are known to be unrelated. If the joined PTRs of
         // two oops is not Null and not Bottom, then we are sure that one
         // of the two oops is non-null, and the comparison will always fail.

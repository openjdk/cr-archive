diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Attr.java b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Attr.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Attr.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Attr.java
@@ -2541,11 +2541,11 @@
                 // Temporary treatment for inline class: Given an inline class V that implements
                 // I1, I2, ... In, v.getClass() is typed to be Class<? extends Object & I1 & I2 .. & In>
                 Type wcb;
                 if (qualifierType.isValue()) {
                     List<Type> bounds = List.of(syms.objectType).appendList(((ClassSymbol) qualifierType.tsym).getInterfaces());
-                    wcb = types.makeIntersectionType(bounds);
+                    wcb = bounds.size() > 1 ? types.makeIntersectionType(bounds) : syms.objectType;
                 } else {
                     wcb = types.erasure(qualifierType);
                 }
                 return new ClassType(restype.getEnclosingType(),
                         List.of(new WildcardType(wcb,

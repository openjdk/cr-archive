diff a/test/hotspot/jtreg/compiler/valhalla/inlinetypes/TestLWorld.java b/test/hotspot/jtreg/compiler/valhalla/inlinetypes/TestLWorld.java
--- a/test/hotspot/jtreg/compiler/valhalla/inlinetypes/TestLWorld.java
+++ b/test/hotspot/jtreg/compiler/valhalla/inlinetypes/TestLWorld.java
@@ -64,11 +64,11 @@
     }
 
     // Helper methods
 
     private static final MyValue1 testValue1 = MyValue1.createWithFieldsInline(rI, rL);
-    private static final MyValue2 testValue2 = MyValue2.createWithFieldsInline(rI, true);
+    private static final MyValue2 testValue2 = MyValue2.createWithFieldsInline(rI, rD);
 
     protected long hash() {
         return testValue1.hash();
     }
 
@@ -184,11 +184,11 @@
         } else if (state == 4) {
             res = valueField1;
         } else if (state == 5) {
             res = null;
         } else if (state == 6) {
-            res = MyValue2.createWithFieldsInline(rI, true);
+            res = MyValue2.createWithFieldsInline(rI, rD);
         } else if (state == 7) {
             res = testValue2;
         }
         return res;
     }
@@ -1626,11 +1626,11 @@
     }
 
     @Test()
     public Object test55(boolean b) {
         MyValue1 vt1 = MyValue1.createWithFieldsInline(rI, rL);
-        MyValue2 vt2 = MyValue2.createWithFieldsInline(rI, true);
+        MyValue2 vt2 = MyValue2.createWithFieldsInline(rI, rD);
         return b ? vt1 : vt2;
     }
 
     @DontCompile
     public void test55_verifier(boolean warmup) {

diff a/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties b/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties
--- a/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties
+++ b/src/jdk.compiler/share/classes/com/sun/tools/javac/resources/compiler.properties
@@ -394,10 +394,14 @@
 
 # 0: symbol or type
 compiler.err.cyclic.inheritance=\
     cyclic inheritance involving {0}
 
+# 0: symbol
+compiler.err.cyclic.value.type.membership=\
+    cyclic inline type membership involving {0}
+
 # 0: symbol
 compiler.err.cyclic.annotation.element=\
     type of element {0} is cyclic
 
 # 0: symbol
@@ -1769,10 +1773,13 @@
 
 # 0: string
 compiler.warn.incubating.modules=\
     using incubating module(s): {0}
 
+compiler.warn.get.class.compared.with.interface=\
+    return value of getClass() can never equal the class literal of an interface
+
 # 0: symbol, 1: symbol
 compiler.warn.has.been.deprecated=\
     {0} in {1} has been deprecated
 
 # 0: symbol, 1: symbol
@@ -2928,10 +2935,13 @@
     pattern matching in instanceof
 
 compiler.misc.feature.reifiable.types.instanceof=\
     reifiable types in instanceof
 
+compiler.misc.feature.inline.type=\
+    inline type
+
 compiler.misc.feature.records=\
     records
 
 compiler.misc.feature.sealed.classes=\
     sealed classes
@@ -3706,5 +3716,82 @@
     invalid source release {0} with --enable-preview\n\
     (preview language features are only supported for release {1})
 
 compiler.err.preview.without.source.or.release=\
     --enable-preview must be used with either -source or --release
+
+# 0: name (of method)
+compiler.err.inline.class.may.not.override=\
+    Inline classes may not override the method {0} from Object
+
+# 0: name (of method)
+compiler.err.value.does.not.support=\
+    Inline types do not support {0}
+
+compiler.err.value.may.not.extend=\
+    Inline type may not extend another inline type or class
+
+compiler.err.value.instance.field.expected.here=\
+    withfield operator requires an instance field of an inline class here
+
+compiler.err.bad.value.based.anno=\
+    Unexpected @ValueBased annotation
+
+# 0: type
+compiler.warn.suspicious.mix.of.null.with.value.based.class=\
+    Suspicious mix of null with value based class {0}
+
+# 0: type
+compiler.warn.potential.null.pollution=\
+    Potential null pollution from nullable type {0}
+
+compiler.err.with.field.operator.disallowed=\
+    WithField operator is allowed only with -XDallowWithFieldOperator
+
+compiler.err.empty.value.not.yet=\
+    Inline types with zero instance size are not supported yet
+
+compiler.err.this.exposed.prematurely=\
+    Inine type instance should not be passed around before being fully initialized
+
+compiler.warn.this.exposed.prematurely=\
+    value based type instance should not be passed around before being fully initialized
+
+# 0: type
+compiler.err.generic.parameterization.with.value.type=\
+    Inferred type {0} involves generic parameterization by an inline type
+
+# 0: type
+compiler.err.inline.type.must.not.implement.identity.object=\
+    The inline type {0} attempts to implement the incompatible interface IdentityObject
+
+# 0: symbol, 1: type
+compiler.err.concrete.supertype.for.inline.class=\
+    The concrete class {1} is not allowed to be a super class of the inline class {0} either directly or indirectly
+
+# 0: symbol, 1: symbol, 2: type
+compiler.err.super.method.cannot.be.synchronized=\
+    The method {0} in the super class {2} of the inline type {1} is synchronized. This is disallowed
+
+# 0: symbol, 1: symbol, 2: type
+compiler.err.super.constructor.cannot.take.arguments=\
+    The super class {2} of the inline type {1} defines a constructor {0} that takes arguments. This is disallowed
+
+# 0: symbol, 1: symbol, 2: type
+compiler.err.super.field.not.allowed=\
+    The super class {2} of the inline type {1} defines an instance field {0}. This is disallowed
+
+# 0: symbol, 1: symbol, 2: type
+compiler.err.super.no.arg.constructor.must.be.empty=\
+    The super class {2} of the inline type {1} defines a nonempty no-arg constructor {0}. This is disallowed
+
+# 0: symbol, 1: type
+compiler.err.super.class.declares.init.block=\
+    The super class {1} of the inline class {0} declares one or more non-empty instance initializer blocks. This is disallowed.
+
+# 0: symbol, 1: type
+compiler.err.super.class.cannot.be.inner=\
+    The super class {1} of the inline class {0} is an inner class. This is disallowed.
+
+compiler.err.projection.cant.be.instantiated=\
+    Illegal attempt to instantiate a projection type
+

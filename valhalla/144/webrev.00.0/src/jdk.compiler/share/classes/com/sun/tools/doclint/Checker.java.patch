diff a/src/jdk.compiler/share/classes/com/sun/tools/doclint/Checker.java b/src/jdk.compiler/share/classes/com/sun/tools/doclint/Checker.java
--- a/src/jdk.compiler/share/classes/com/sun/tools/doclint/Checker.java
+++ b/src/jdk.compiler/share/classes/com/sun/tools/doclint/Checker.java
@@ -34,10 +34,11 @@
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 import javax.lang.model.element.Element;
@@ -112,10 +113,11 @@
     boolean foundReturn = false;
     boolean hasNonWhitespaceText = false;
 
     public enum Flag {
         TABLE_HAS_CAPTION,
+        TABLE_IS_PRESENTATION,
         HAS_ELEMENT,
         HAS_HEADING,
         HAS_INLINE_TAG,
         HAS_TEXT,
         REPORTED_BAD_INLINE
@@ -528,11 +530,12 @@
             while (!tagStack.isEmpty()) {
                 TagStackItem top = tagStack.peek();
                 if (t == top.tag) {
                     switch (t) {
                         case TABLE:
-                            if (!top.attrs.contains(HtmlTag.Attr.SUMMARY)
+                            if (!top.flags.contains(Flag.TABLE_IS_PRESENTATION)
+                                    && !top.attrs.contains(HtmlTag.Attr.SUMMARY)
                                     && !top.flags.contains(Flag.TABLE_HAS_CAPTION)) {
                                 env.messages.error(ACCESSIBILITY, tree,
                                         "dc.no.summary.or.caption.for.table");
                             }
                             break;
@@ -685,10 +688,19 @@
                             } catch (NumberFormatException ex) {
                                 env.messages.error(HTML, tree, "dc.attr.table.border.html5", attr);
                             }
                         }
                         break;
+
+                    case ROLE:
+                        if (currTag == HtmlTag.TABLE) {
+                            String v = getAttrValue(tree);
+                            if (Objects.equals(v, "presentation")) {
+                                tagStack.peek().flags.add(Flag.TABLE_IS_PRESENTATION);
+                            }
+                        }
+                        break;
                 }
             }
         }
 
         // TODO: basic check on value

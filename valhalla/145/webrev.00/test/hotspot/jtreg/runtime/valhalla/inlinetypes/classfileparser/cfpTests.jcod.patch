diff a/test/hotspot/jtreg/runtime/valhalla/inlinetypes/classfileparser/cfpTests.jcod b/test/hotspot/jtreg/runtime/valhalla/inlinetypes/classfileparser/cfpTests.jcod
--- a/test/hotspot/jtreg/runtime/valhalla/inlinetypes/classfileparser/cfpTests.jcod
+++ b/test/hotspot/jtreg/runtime/valhalla/inlinetypes/classfileparser/cfpTests.jcod
@@ -41,11 +41,11 @@
 //         return v;
 //     }
 // }
 
 
-// Test that class modifiers cannot have both ACC_VALUE and ACC_ABSTRACT set.
+// Test that class modifiers cannot have both ACC_INLINE and ACC_ABSTRACT set.
 //
 class ValueAbstract {
   0xCAFEBABE;
   0; // minor version
   60; // version
@@ -78,11 +78,11 @@
     NameAndType #18 #19; // #25     at 0xC9
     NameAndType #8 #11; // #26     at 0xCE
     Utf8 "java/lang/Object"; // #27     at 0xD3
   } // Constant Pool
 
-  0x0530; // access [  ACC_VALUE ACC_ABSTRACT(bad) ACC_SUPER ACC_FINAL ]
+  0x0530; // access [  ACC_INLINE ACC_ABSTRACT(bad) ACC_SUPER ACC_FINAL ]
   #3;// this_cpx
   #7;// super_cpx
 
   [0] { // Interfaces
   } // Interfaces
@@ -197,11 +197,11 @@
   } // Attributes
 } // end class ValueAbstract
 
 //////////////////////////////////////////////////////////////////////
 
-// Test that class modifiers cannot have both ACC_VALUE and ACC_ENUM set.
+// Test that class modifiers cannot have both ACC_INLINE and ACC_ENUM set.
 //
 class ValueEnum {
   0xCAFEBABE;
   0; // minor version
   60; // version
@@ -234,11 +234,11 @@
     NameAndType #18 #19; // #25     at 0xC9
     NameAndType #8 #11; // #26     at 0xCE
     Utf8 "java/lang/Object"; // #27     at 0xD3
   } // Constant Pool
 
-  0x04130; // access [  ACC_VALUE ACC_ENUM(bad) ACC_SUPER ACC_FINAL ]
+  0x04130; // access [  ACC_INLINE ACC_ENUM(bad) ACC_SUPER ACC_FINAL ]
   #3;// this_cpx
   #7;// super_cpx
 
   [0] { // Interfaces
   } // Interfaces
@@ -390,11 +390,11 @@
     NameAndType #18 #19; // #25     at 0xC9
     NameAndType #8 #11; // #26     at 0xCE
     Utf8 "java/lang/Object"; // #27     at 0xD3
   } // Constant Pool
 
-  0x0130; // access [ ACC_VALUE ACC_SUPER ACC_FINAL ]
+  0x0130; // access [ ACC_INLINE ACC_SUPER ACC_FINAL ]
   #3;// this_cpx
   #7;// super_cpx
 
   [0] { // Interfaces
   } // Interfaces
@@ -509,11 +509,11 @@
   } // Attributes
 } // end class ValueFieldNotFinal
 
 //////////////////////////////////////////////////////////////////////
 
-// Test that class modifiers cannot have both ACC_VALUE and ACC_INTERFACE set.
+// Test that class modifiers cannot have both ACC_INLINE and ACC_INTERFACE set.
 //
 class ValueInterface {
   0xCAFEBABE;
   0; // minor version
   60; // version
@@ -545,11 +545,11 @@
     NameAndType #16 #17; // #24     at 0xD0
     NameAndType #8 #9; // #25     at 0xD5
     Utf8 "java/lang/Object"; // #26     at 0xDA
   } // Constant Pool
 
-  0x0330; // access [ ACC_VALUE ACC_INTERFACE(bad) ACC_SUPER ACC_FINAL ]
+  0x0330; // access [ ACC_INLINE ACC_INTERFACE(bad) ACC_SUPER ACC_FINAL ]
   #3;// this_cpx
   #7;// super_cpx
 
   [0] { // Interfaces
   } // Interfaces
